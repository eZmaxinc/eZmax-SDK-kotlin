/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.apis.ObjectEzsigntemplateApi
import eZmaxApi.models.CommonResponseError
import eZmaxApi.models.EzsigntemplateCopyV1Request
import eZmaxApi.models.EzsigntemplateCopyV1Response
import eZmaxApi.models.EzsigntemplateCreateObjectV1Request
import eZmaxApi.models.EzsigntemplateCreateObjectV1Response
import eZmaxApi.models.EzsigntemplateCreateObjectV2Request
import eZmaxApi.models.EzsigntemplateCreateObjectV2Response
import eZmaxApi.models.EzsigntemplateDeleteObjectV1Response
import eZmaxApi.models.EzsigntemplateEditObjectV1Request
import eZmaxApi.models.EzsigntemplateEditObjectV1Response
import eZmaxApi.models.EzsigntemplateEditObjectV2Request
import eZmaxApi.models.EzsigntemplateEditObjectV2Response
import eZmaxApi.models.EzsigntemplateGetAutocompleteV2Response
import eZmaxApi.models.EzsigntemplateGetListV1Response
import eZmaxApi.models.EzsigntemplateGetObjectV1Response
import eZmaxApi.models.EzsigntemplateGetObjectV2Response
import eZmaxApi.models.HeaderAcceptLanguage

class ObjectEzsigntemplateApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ObjectEzsigntemplateApi
        //val apiInstance = ObjectEzsigntemplateApi()

        // to test ezsigntemplateCopyV1
        should("test ezsigntemplateCopyV1") {
            // uncomment below to test ezsigntemplateCopyV1
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigntemplateCopyV1Request : EzsigntemplateCopyV1Request =  // EzsigntemplateCopyV1Request | 
            //val result : EzsigntemplateCopyV1Response = apiInstance.ezsigntemplateCopyV1(pkiEzsigntemplateID, ezsigntemplateCopyV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateCreateObjectV1
        should("test ezsigntemplateCreateObjectV1") {
            // uncomment below to test ezsigntemplateCreateObjectV1
            //val ezsigntemplateCreateObjectV1Request : EzsigntemplateCreateObjectV1Request =  // EzsigntemplateCreateObjectV1Request | 
            //val result : EzsigntemplateCreateObjectV1Response = apiInstance.ezsigntemplateCreateObjectV1(ezsigntemplateCreateObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateCreateObjectV2
        should("test ezsigntemplateCreateObjectV2") {
            // uncomment below to test ezsigntemplateCreateObjectV2
            //val ezsigntemplateCreateObjectV2Request : EzsigntemplateCreateObjectV2Request =  // EzsigntemplateCreateObjectV2Request | 
            //val result : EzsigntemplateCreateObjectV2Response = apiInstance.ezsigntemplateCreateObjectV2(ezsigntemplateCreateObjectV2Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateDeleteObjectV1
        should("test ezsigntemplateDeleteObjectV1") {
            // uncomment below to test ezsigntemplateDeleteObjectV1
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigntemplateDeleteObjectV1Response = apiInstance.ezsigntemplateDeleteObjectV1(pkiEzsigntemplateID)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateEditObjectV1
        should("test ezsigntemplateEditObjectV1") {
            // uncomment below to test ezsigntemplateEditObjectV1
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigntemplateEditObjectV1Request : EzsigntemplateEditObjectV1Request =  // EzsigntemplateEditObjectV1Request | 
            //val result : EzsigntemplateEditObjectV1Response = apiInstance.ezsigntemplateEditObjectV1(pkiEzsigntemplateID, ezsigntemplateEditObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateEditObjectV2
        should("test ezsigntemplateEditObjectV2") {
            // uncomment below to test ezsigntemplateEditObjectV2
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigntemplateEditObjectV2Request : EzsigntemplateEditObjectV2Request =  // EzsigntemplateEditObjectV2Request | 
            //val result : EzsigntemplateEditObjectV2Response = apiInstance.ezsigntemplateEditObjectV2(pkiEzsigntemplateID, ezsigntemplateEditObjectV2Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetAutocompleteV2
        should("test ezsigntemplateGetAutocompleteV2") {
            // uncomment below to test ezsigntemplateGetAutocompleteV2
            //val sSelector : kotlin.String = sSelector_example // kotlin.String | The type of Ezsigntemplates to return
            //val eFilterActive : kotlin.String = eFilterActive_example // kotlin.String | Specify which results we want to display.
            //val sQuery : kotlin.String = sQuery_example // kotlin.String | Allow to filter the returned results
            //val acceptLanguage : HeaderAcceptLanguage =  // HeaderAcceptLanguage | 
            //val result : EzsigntemplateGetAutocompleteV2Response = apiInstance.ezsigntemplateGetAutocompleteV2(sSelector, eFilterActive, sQuery, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetListV1
        should("test ezsigntemplateGetListV1") {
            // uncomment below to test ezsigntemplateGetListV1
            //val eOrderBy : kotlin.String = eOrderBy_example // kotlin.String | Specify how you want the results to be sorted
            //val iRowMax : kotlin.Int = 56 // kotlin.Int | 
            //val iRowOffset : kotlin.Int = 56 // kotlin.Int | 
            //val acceptLanguage : HeaderAcceptLanguage =  // HeaderAcceptLanguage | 
            //val sFilter : kotlin.String = sFilter_example // kotlin.String | 
            //val result : EzsigntemplateGetListV1Response = apiInstance.ezsigntemplateGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetObjectV1
        should("test ezsigntemplateGetObjectV1") {
            // uncomment below to test ezsigntemplateGetObjectV1
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigntemplateGetObjectV1Response = apiInstance.ezsigntemplateGetObjectV1(pkiEzsigntemplateID)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetObjectV2
        should("test ezsigntemplateGetObjectV2") {
            // uncomment below to test ezsigntemplateGetObjectV2
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigntemplateGetObjectV2Response = apiInstance.ezsigntemplateGetObjectV2(pkiEzsigntemplateID)
            //result shouldBe ("TODO")
        }

    }
}
