/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.apis.ObjectEzsigntemplateApi
import eZmaxApi.models.CommonResponseError
import eZmaxApi.models.EzsigntemplateCopyV1Request
import eZmaxApi.models.EzsigntemplateCopyV1Response
import eZmaxApi.models.EzsigntemplateCreateObjectV3Request
import eZmaxApi.models.EzsigntemplateCreateObjectV3Response
import eZmaxApi.models.EzsigntemplateDeleteObjectV1Response
import eZmaxApi.models.EzsigntemplateEditObjectV3Request
import eZmaxApi.models.EzsigntemplateEditObjectV3Response
import eZmaxApi.models.EzsigntemplateGetAutocompleteV2Response
import eZmaxApi.models.EzsigntemplateGetListV1Response
import eZmaxApi.models.EzsigntemplateGetObjectV3Response
import eZmaxApi.models.HeaderAcceptLanguage

class ObjectEzsigntemplateApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ObjectEzsigntemplateApi
        //val apiInstance = ObjectEzsigntemplateApi()

        // to test ezsigntemplateCopyV1
        should("test ezsigntemplateCopyV1") {
            // uncomment below to test ezsigntemplateCopyV1
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigntemplateCopyV1Request : EzsigntemplateCopyV1Request =  // EzsigntemplateCopyV1Request | 
            //val result : EzsigntemplateCopyV1Response = apiInstance.ezsigntemplateCopyV1(pkiEzsigntemplateID, ezsigntemplateCopyV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateCreateObjectV3
        should("test ezsigntemplateCreateObjectV3") {
            // uncomment below to test ezsigntemplateCreateObjectV3
            //val ezsigntemplateCreateObjectV3Request : EzsigntemplateCreateObjectV3Request =  // EzsigntemplateCreateObjectV3Request | 
            //val result : EzsigntemplateCreateObjectV3Response = apiInstance.ezsigntemplateCreateObjectV3(ezsigntemplateCreateObjectV3Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateDeleteObjectV1
        should("test ezsigntemplateDeleteObjectV1") {
            // uncomment below to test ezsigntemplateDeleteObjectV1
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigntemplateDeleteObjectV1Response = apiInstance.ezsigntemplateDeleteObjectV1(pkiEzsigntemplateID)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateEditObjectV3
        should("test ezsigntemplateEditObjectV3") {
            // uncomment below to test ezsigntemplateEditObjectV3
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigntemplateEditObjectV3Request : EzsigntemplateEditObjectV3Request =  // EzsigntemplateEditObjectV3Request | 
            //val result : EzsigntemplateEditObjectV3Response = apiInstance.ezsigntemplateEditObjectV3(pkiEzsigntemplateID, ezsigntemplateEditObjectV3Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetAutocompleteV2
        should("test ezsigntemplateGetAutocompleteV2") {
            // uncomment below to test ezsigntemplateGetAutocompleteV2
            //val sSelector : kotlin.String = sSelector_example // kotlin.String | The type of Ezsigntemplates to return
            //val eFilterActive : kotlin.String = eFilterActive_example // kotlin.String | Specify which results we want to display.
            //val sQuery : kotlin.String = sQuery_example // kotlin.String | Allow to filter the returned results
            //val acceptLanguage : HeaderAcceptLanguage =  // HeaderAcceptLanguage | 
            //val fkiEzsignfoldertypeID : kotlin.Int = 56 // kotlin.Int | The fkiEzsignfoldertypeID to use with the selector Ezsigntemplatepublic
            //val result : EzsigntemplateGetAutocompleteV2Response = apiInstance.ezsigntemplateGetAutocompleteV2(sSelector, eFilterActive, sQuery, acceptLanguage, fkiEzsignfoldertypeID)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetListV1
        should("test ezsigntemplateGetListV1") {
            // uncomment below to test ezsigntemplateGetListV1
            //val eOrderBy : kotlin.String = eOrderBy_example // kotlin.String | Specify how you want the results to be sorted
            //val iRowMax : kotlin.Int = 56 // kotlin.Int | 
            //val iRowOffset : kotlin.Int = 56 // kotlin.Int | 
            //val acceptLanguage : HeaderAcceptLanguage =  // HeaderAcceptLanguage | 
            //val sFilter : kotlin.String = sFilter_example // kotlin.String | 
            //val result : EzsigntemplateGetListV1Response = apiInstance.ezsigntemplateGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter)
            //result shouldBe ("TODO")
        }

        // to test ezsigntemplateGetObjectV3
        should("test ezsigntemplateGetObjectV3") {
            // uncomment below to test ezsigntemplateGetObjectV3
            //val pkiEzsigntemplateID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigntemplateGetObjectV3Response = apiInstance.ezsigntemplateGetObjectV3(pkiEzsigntemplateID)
            //result shouldBe ("TODO")
        }

    }
}
