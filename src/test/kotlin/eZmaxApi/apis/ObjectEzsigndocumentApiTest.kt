/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.apis.ObjectEzsigndocumentApi
import eZmaxApi.models.CommonResponseError
import eZmaxApi.models.CommonResponseErrorEzsignformValidation
import eZmaxApi.models.CommonResponseErrorSTemporaryFileUrl
import eZmaxApi.models.EzsigndocumentApplyEzsigntemplateV1Request
import eZmaxApi.models.EzsigndocumentApplyEzsigntemplateV1Response
import eZmaxApi.models.EzsigndocumentApplyEzsigntemplateV2Request
import eZmaxApi.models.EzsigndocumentApplyEzsigntemplateV2Response
import eZmaxApi.models.EzsigndocumentApplyEzsigntemplateglobalV1Request
import eZmaxApi.models.EzsigndocumentApplyEzsigntemplateglobalV1Response
import eZmaxApi.models.EzsigndocumentCreateEzsignelementsPositionedByWordV1Request
import eZmaxApi.models.EzsigndocumentCreateEzsignelementsPositionedByWordV1Response
import eZmaxApi.models.EzsigndocumentCreateObjectV1Request
import eZmaxApi.models.EzsigndocumentCreateObjectV1Response
import eZmaxApi.models.EzsigndocumentCreateObjectV2Request
import eZmaxApi.models.EzsigndocumentCreateObjectV2Response
import eZmaxApi.models.EzsigndocumentDeclineToSignV1Request
import eZmaxApi.models.EzsigndocumentDeclineToSignV1Response
import eZmaxApi.models.EzsigndocumentDeleteObjectV1Response
import eZmaxApi.models.EzsigndocumentEditEzsignformfieldgroupsV1Request
import eZmaxApi.models.EzsigndocumentEditEzsignformfieldgroupsV1Response
import eZmaxApi.models.EzsigndocumentEditEzsignsignaturesV1Request
import eZmaxApi.models.EzsigndocumentEditEzsignsignaturesV1Response
import eZmaxApi.models.EzsigndocumentEndPrematurelyV1Response
import eZmaxApi.models.EzsigndocumentFlattenV1Response
import eZmaxApi.models.EzsigndocumentGetActionableElementsV1Response
import eZmaxApi.models.EzsigndocumentGetAttachmentsV1Response
import eZmaxApi.models.EzsigndocumentGetCompletedElementsV1Response
import eZmaxApi.models.EzsigndocumentGetDownloadUrlV1Response
import eZmaxApi.models.EzsigndocumentGetEzsignannotationsV1Response
import eZmaxApi.models.EzsigndocumentGetEzsigndiscussionsV1Response
import eZmaxApi.models.EzsigndocumentGetEzsignformfieldgroupsV1Response
import eZmaxApi.models.EzsigndocumentGetEzsignpagesV1Response
import eZmaxApi.models.EzsigndocumentGetEzsignsignaturesAutomaticV1Response
import eZmaxApi.models.EzsigndocumentGetEzsignsignaturesV1Response
import eZmaxApi.models.EzsigndocumentGetFormDataV1Response
import eZmaxApi.models.EzsigndocumentGetObjectV1Response
import eZmaxApi.models.EzsigndocumentGetObjectV2Response
import eZmaxApi.models.EzsigndocumentGetTemporaryProofV1Response
import eZmaxApi.models.EzsigndocumentGetWordsPositionsV1Request
import eZmaxApi.models.EzsigndocumentGetWordsPositionsV1Response
import eZmaxApi.models.EzsigndocumentPatchObjectV1Request
import eZmaxApi.models.EzsigndocumentPatchObjectV1Response
import eZmaxApi.models.EzsigndocumentSubmitEzsignformV1Request
import eZmaxApi.models.EzsigndocumentSubmitEzsignformV1Response
import eZmaxApi.models.EzsigndocumentUnsendV1Response

class ObjectEzsigndocumentApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ObjectEzsigndocumentApi
        //val apiInstance = ObjectEzsigndocumentApi()

        // to test ezsigndocumentApplyEzsigntemplateV1
        should("test ezsigndocumentApplyEzsigntemplateV1") {
            // uncomment below to test ezsigndocumentApplyEzsigntemplateV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentApplyEzsigntemplateV1Request : EzsigndocumentApplyEzsigntemplateV1Request =  // EzsigndocumentApplyEzsigntemplateV1Request | 
            //val result : EzsigndocumentApplyEzsigntemplateV1Response = apiInstance.ezsigndocumentApplyEzsigntemplateV1(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentApplyEzsigntemplateV2
        should("test ezsigndocumentApplyEzsigntemplateV2") {
            // uncomment below to test ezsigndocumentApplyEzsigntemplateV2
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentApplyEzsigntemplateV2Request : EzsigndocumentApplyEzsigntemplateV2Request =  // EzsigndocumentApplyEzsigntemplateV2Request | 
            //val result : EzsigndocumentApplyEzsigntemplateV2Response = apiInstance.ezsigndocumentApplyEzsigntemplateV2(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateV2Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentApplyEzsigntemplateglobalV1
        should("test ezsigndocumentApplyEzsigntemplateglobalV1") {
            // uncomment below to test ezsigndocumentApplyEzsigntemplateglobalV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentApplyEzsigntemplateglobalV1Request : EzsigndocumentApplyEzsigntemplateglobalV1Request =  // EzsigndocumentApplyEzsigntemplateglobalV1Request | 
            //val result : EzsigndocumentApplyEzsigntemplateglobalV1Response = apiInstance.ezsigndocumentApplyEzsigntemplateglobalV1(pkiEzsigndocumentID, ezsigndocumentApplyEzsigntemplateglobalV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentCreateEzsignelementsPositionedByWordV1
        should("test ezsigndocumentCreateEzsignelementsPositionedByWordV1") {
            // uncomment below to test ezsigndocumentCreateEzsignelementsPositionedByWordV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentCreateEzsignelementsPositionedByWordV1Request : EzsigndocumentCreateEzsignelementsPositionedByWordV1Request =  // EzsigndocumentCreateEzsignelementsPositionedByWordV1Request | 
            //val result : EzsigndocumentCreateEzsignelementsPositionedByWordV1Response = apiInstance.ezsigndocumentCreateEzsignelementsPositionedByWordV1(pkiEzsigndocumentID, ezsigndocumentCreateEzsignelementsPositionedByWordV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentCreateObjectV1
        should("test ezsigndocumentCreateObjectV1") {
            // uncomment below to test ezsigndocumentCreateObjectV1
            //val ezsigndocumentCreateObjectV1Request : kotlin.collections.List<EzsigndocumentCreateObjectV1Request> =  // kotlin.collections.List<EzsigndocumentCreateObjectV1Request> | 
            //val result : EzsigndocumentCreateObjectV1Response = apiInstance.ezsigndocumentCreateObjectV1(ezsigndocumentCreateObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentCreateObjectV2
        should("test ezsigndocumentCreateObjectV2") {
            // uncomment below to test ezsigndocumentCreateObjectV2
            //val ezsigndocumentCreateObjectV2Request : EzsigndocumentCreateObjectV2Request =  // EzsigndocumentCreateObjectV2Request | 
            //val result : EzsigndocumentCreateObjectV2Response = apiInstance.ezsigndocumentCreateObjectV2(ezsigndocumentCreateObjectV2Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentDeclineToSignV1
        should("test ezsigndocumentDeclineToSignV1") {
            // uncomment below to test ezsigndocumentDeclineToSignV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentDeclineToSignV1Request : EzsigndocumentDeclineToSignV1Request =  // EzsigndocumentDeclineToSignV1Request | 
            //val result : EzsigndocumentDeclineToSignV1Response = apiInstance.ezsigndocumentDeclineToSignV1(pkiEzsigndocumentID, ezsigndocumentDeclineToSignV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentDeleteObjectV1
        should("test ezsigndocumentDeleteObjectV1") {
            // uncomment below to test ezsigndocumentDeleteObjectV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentDeleteObjectV1Response = apiInstance.ezsigndocumentDeleteObjectV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentEditEzsignformfieldgroupsV1
        should("test ezsigndocumentEditEzsignformfieldgroupsV1") {
            // uncomment below to test ezsigndocumentEditEzsignformfieldgroupsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentEditEzsignformfieldgroupsV1Request : EzsigndocumentEditEzsignformfieldgroupsV1Request =  // EzsigndocumentEditEzsignformfieldgroupsV1Request | 
            //val result : EzsigndocumentEditEzsignformfieldgroupsV1Response = apiInstance.ezsigndocumentEditEzsignformfieldgroupsV1(pkiEzsigndocumentID, ezsigndocumentEditEzsignformfieldgroupsV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentEditEzsignsignaturesV1
        should("test ezsigndocumentEditEzsignsignaturesV1") {
            // uncomment below to test ezsigndocumentEditEzsignsignaturesV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentEditEzsignsignaturesV1Request : EzsigndocumentEditEzsignsignaturesV1Request =  // EzsigndocumentEditEzsignsignaturesV1Request | 
            //val result : EzsigndocumentEditEzsignsignaturesV1Response = apiInstance.ezsigndocumentEditEzsignsignaturesV1(pkiEzsigndocumentID, ezsigndocumentEditEzsignsignaturesV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentEndPrematurelyV1
        should("test ezsigndocumentEndPrematurelyV1") {
            // uncomment below to test ezsigndocumentEndPrematurelyV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val body : kotlin.Any = Object // kotlin.Any | 
            //val result : EzsigndocumentEndPrematurelyV1Response = apiInstance.ezsigndocumentEndPrematurelyV1(pkiEzsigndocumentID, body)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentFlattenV1
        should("test ezsigndocumentFlattenV1") {
            // uncomment below to test ezsigndocumentFlattenV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val body : kotlin.Any = Object // kotlin.Any | 
            //val result : EzsigndocumentFlattenV1Response = apiInstance.ezsigndocumentFlattenV1(pkiEzsigndocumentID, body)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetActionableElementsV1
        should("test ezsigndocumentGetActionableElementsV1") {
            // uncomment below to test ezsigndocumentGetActionableElementsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetActionableElementsV1Response = apiInstance.ezsigndocumentGetActionableElementsV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetAttachmentsV1
        should("test ezsigndocumentGetAttachmentsV1") {
            // uncomment below to test ezsigndocumentGetAttachmentsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetAttachmentsV1Response = apiInstance.ezsigndocumentGetAttachmentsV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetCompletedElementsV1
        should("test ezsigndocumentGetCompletedElementsV1") {
            // uncomment below to test ezsigndocumentGetCompletedElementsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetCompletedElementsV1Response = apiInstance.ezsigndocumentGetCompletedElementsV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetDownloadUrlV1
        should("test ezsigndocumentGetDownloadUrlV1") {
            // uncomment below to test ezsigndocumentGetDownloadUrlV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val eDocumentType : kotlin.String = eDocumentType_example // kotlin.String | The type of document to retrieve.  1. **Initial** Is the initial document before any signature were applied. 2. **SignatureReady** Is the version containing the annotations/form to show the signer. 3. **Signed** Is the final document once all signatures were applied in current document if eEzsignfolderCompletion is PerEzsigndocument.<br>     Is the final document once all signatures were applied in all documents if eEzsignfolderCompletion is PerEzsignfolder. 4. **Proofdocument** Is the evidence report. 5. **Proof** Is the complete evidence archive including all of the above and more. 
            //val result : EzsigndocumentGetDownloadUrlV1Response = apiInstance.ezsigndocumentGetDownloadUrlV1(pkiEzsigndocumentID, eDocumentType)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetEzsignannotationsV1
        should("test ezsigndocumentGetEzsignannotationsV1") {
            // uncomment below to test ezsigndocumentGetEzsignannotationsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetEzsignannotationsV1Response = apiInstance.ezsigndocumentGetEzsignannotationsV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetEzsigndiscussionsV1
        should("test ezsigndocumentGetEzsigndiscussionsV1") {
            // uncomment below to test ezsigndocumentGetEzsigndiscussionsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetEzsigndiscussionsV1Response = apiInstance.ezsigndocumentGetEzsigndiscussionsV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetEzsignformfieldgroupsV1
        should("test ezsigndocumentGetEzsignformfieldgroupsV1") {
            // uncomment below to test ezsigndocumentGetEzsignformfieldgroupsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetEzsignformfieldgroupsV1Response = apiInstance.ezsigndocumentGetEzsignformfieldgroupsV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetEzsignpagesV1
        should("test ezsigndocumentGetEzsignpagesV1") {
            // uncomment below to test ezsigndocumentGetEzsignpagesV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetEzsignpagesV1Response = apiInstance.ezsigndocumentGetEzsignpagesV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetEzsignsignaturesAutomaticV1
        should("test ezsigndocumentGetEzsignsignaturesAutomaticV1") {
            // uncomment below to test ezsigndocumentGetEzsignsignaturesAutomaticV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetEzsignsignaturesAutomaticV1Response = apiInstance.ezsigndocumentGetEzsignsignaturesAutomaticV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetEzsignsignaturesV1
        should("test ezsigndocumentGetEzsignsignaturesV1") {
            // uncomment below to test ezsigndocumentGetEzsignsignaturesV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetEzsignsignaturesV1Response = apiInstance.ezsigndocumentGetEzsignsignaturesV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetFormDataV1
        should("test ezsigndocumentGetFormDataV1") {
            // uncomment below to test ezsigndocumentGetFormDataV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetFormDataV1Response = apiInstance.ezsigndocumentGetFormDataV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetObjectV1
        should("test ezsigndocumentGetObjectV1") {
            // uncomment below to test ezsigndocumentGetObjectV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetObjectV1Response = apiInstance.ezsigndocumentGetObjectV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetObjectV2
        should("test ezsigndocumentGetObjectV2") {
            // uncomment below to test ezsigndocumentGetObjectV2
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetObjectV2Response = apiInstance.ezsigndocumentGetObjectV2(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetTemporaryProofV1
        should("test ezsigndocumentGetTemporaryProofV1") {
            // uncomment below to test ezsigndocumentGetTemporaryProofV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val result : EzsigndocumentGetTemporaryProofV1Response = apiInstance.ezsigndocumentGetTemporaryProofV1(pkiEzsigndocumentID)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentGetWordsPositionsV1
        should("test ezsigndocumentGetWordsPositionsV1") {
            // uncomment below to test ezsigndocumentGetWordsPositionsV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentGetWordsPositionsV1Request : EzsigndocumentGetWordsPositionsV1Request =  // EzsigndocumentGetWordsPositionsV1Request | 
            //val result : EzsigndocumentGetWordsPositionsV1Response = apiInstance.ezsigndocumentGetWordsPositionsV1(pkiEzsigndocumentID, ezsigndocumentGetWordsPositionsV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentPatchObjectV1
        should("test ezsigndocumentPatchObjectV1") {
            // uncomment below to test ezsigndocumentPatchObjectV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentPatchObjectV1Request : EzsigndocumentPatchObjectV1Request =  // EzsigndocumentPatchObjectV1Request | 
            //val result : EzsigndocumentPatchObjectV1Response = apiInstance.ezsigndocumentPatchObjectV1(pkiEzsigndocumentID, ezsigndocumentPatchObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentSubmitEzsignformV1
        should("test ezsigndocumentSubmitEzsignformV1") {
            // uncomment below to test ezsigndocumentSubmitEzsignformV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val ezsigndocumentSubmitEzsignformV1Request : EzsigndocumentSubmitEzsignformV1Request =  // EzsigndocumentSubmitEzsignformV1Request | 
            //val result : EzsigndocumentSubmitEzsignformV1Response = apiInstance.ezsigndocumentSubmitEzsignformV1(pkiEzsigndocumentID, ezsigndocumentSubmitEzsignformV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsigndocumentUnsendV1
        should("test ezsigndocumentUnsendV1") {
            // uncomment below to test ezsigndocumentUnsendV1
            //val pkiEzsigndocumentID : kotlin.Int = 56 // kotlin.Int | 
            //val body : kotlin.Any = Object // kotlin.Any | 
            //val result : EzsigndocumentUnsendV1Response = apiInstance.ezsigndocumentUnsendV1(pkiEzsigndocumentID, body)
            //result shouldBe ("TODO")
        }

    }
}
