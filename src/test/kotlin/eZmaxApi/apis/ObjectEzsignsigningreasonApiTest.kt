/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.apis.ObjectEzsignsigningreasonApi
import eZmaxApi.models.CommonResponseError
import eZmaxApi.models.EzsignsigningreasonCreateObjectV1Request
import eZmaxApi.models.EzsignsigningreasonCreateObjectV1Response
import eZmaxApi.models.EzsignsigningreasonEditObjectV1Request
import eZmaxApi.models.EzsignsigningreasonEditObjectV1Response
import eZmaxApi.models.EzsignsigningreasonGetAutocompleteV2Response
import eZmaxApi.models.EzsignsigningreasonGetListV1Response
import eZmaxApi.models.EzsignsigningreasonGetObjectV2Response
import eZmaxApi.models.HeaderAcceptLanguage

class ObjectEzsignsigningreasonApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ObjectEzsignsigningreasonApi
        //val apiInstance = ObjectEzsignsigningreasonApi()

        // to test ezsignsigningreasonCreateObjectV1
        should("test ezsignsigningreasonCreateObjectV1") {
            // uncomment below to test ezsignsigningreasonCreateObjectV1
            //val ezsignsigningreasonCreateObjectV1Request : EzsignsigningreasonCreateObjectV1Request =  // EzsignsigningreasonCreateObjectV1Request | 
            //val result : EzsignsigningreasonCreateObjectV1Response = apiInstance.ezsignsigningreasonCreateObjectV1(ezsignsigningreasonCreateObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsignsigningreasonEditObjectV1
        should("test ezsignsigningreasonEditObjectV1") {
            // uncomment below to test ezsignsigningreasonEditObjectV1
            //val pkiEzsignsigningreasonID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Ezsignsigningreason
            //val ezsignsigningreasonEditObjectV1Request : EzsignsigningreasonEditObjectV1Request =  // EzsignsigningreasonEditObjectV1Request | 
            //val result : EzsignsigningreasonEditObjectV1Response = apiInstance.ezsignsigningreasonEditObjectV1(pkiEzsignsigningreasonID, ezsignsigningreasonEditObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test ezsignsigningreasonGetAutocompleteV2
        should("test ezsignsigningreasonGetAutocompleteV2") {
            // uncomment below to test ezsignsigningreasonGetAutocompleteV2
            //val sSelector : kotlin.String = sSelector_example // kotlin.String | The type of Ezsignsigningreasons to return
            //val eFilterActive : kotlin.String = eFilterActive_example // kotlin.String | Specify which results we want to display.
            //val sQuery : kotlin.String = sQuery_example // kotlin.String | Allow to filter the returned results
            //val acceptLanguage : HeaderAcceptLanguage =  // HeaderAcceptLanguage | 
            //val result : EzsignsigningreasonGetAutocompleteV2Response = apiInstance.ezsignsigningreasonGetAutocompleteV2(sSelector, eFilterActive, sQuery, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test ezsignsigningreasonGetListV1
        should("test ezsignsigningreasonGetListV1") {
            // uncomment below to test ezsignsigningreasonGetListV1
            //val eOrderBy : kotlin.String = eOrderBy_example // kotlin.String | Specify how you want the results to be sorted
            //val iRowMax : kotlin.Int = 56 // kotlin.Int | 
            //val iRowOffset : kotlin.Int = 56 // kotlin.Int | 
            //val acceptLanguage : HeaderAcceptLanguage =  // HeaderAcceptLanguage | 
            //val sFilter : kotlin.String = sFilter_example // kotlin.String | 
            //val result : EzsignsigningreasonGetListV1Response = apiInstance.ezsignsigningreasonGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter)
            //result shouldBe ("TODO")
        }

        // to test ezsignsigningreasonGetObjectV2
        should("test ezsignsigningreasonGetObjectV2") {
            // uncomment below to test ezsignsigningreasonGetObjectV2
            //val pkiEzsignsigningreasonID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Ezsignsigningreason
            //val result : EzsignsigningreasonGetObjectV2Response = apiInstance.ezsignsigningreasonGetObjectV2(pkiEzsignsigningreasonID)
            //result shouldBe ("TODO")
        }

    }
}
