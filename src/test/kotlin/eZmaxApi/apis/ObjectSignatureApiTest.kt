/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.apis.ObjectSignatureApi
import eZmaxApi.models.CommonResponse
import eZmaxApi.models.CommonResponseError
import eZmaxApi.models.SignatureCreateObjectV1Request
import eZmaxApi.models.SignatureCreateObjectV1Response
import eZmaxApi.models.SignatureEditObjectV1Request
import eZmaxApi.models.SignatureGetObjectV2Response
import eZmaxApi.models.SignatureGetObjectV3Response

class ObjectSignatureApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ObjectSignatureApi
        //val apiInstance = ObjectSignatureApi()

        // to test signatureCreateObjectV1
        should("test signatureCreateObjectV1") {
            // uncomment below to test signatureCreateObjectV1
            //val signatureCreateObjectV1Request : SignatureCreateObjectV1Request =  // SignatureCreateObjectV1Request | 
            //val result : SignatureCreateObjectV1Response = apiInstance.signatureCreateObjectV1(signatureCreateObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test signatureDeleteObjectV1
        should("test signatureDeleteObjectV1") {
            // uncomment below to test signatureDeleteObjectV1
            //val pkiSignatureID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Signature
            //val result : CommonResponse = apiInstance.signatureDeleteObjectV1(pkiSignatureID)
            //result shouldBe ("TODO")
        }

        // to test signatureEditObjectV1
        should("test signatureEditObjectV1") {
            // uncomment below to test signatureEditObjectV1
            //val pkiSignatureID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Signature
            //val signatureEditObjectV1Request : SignatureEditObjectV1Request =  // SignatureEditObjectV1Request | 
            //val result : CommonResponse = apiInstance.signatureEditObjectV1(pkiSignatureID, signatureEditObjectV1Request)
            //result shouldBe ("TODO")
        }

        // to test signatureGetObjectV2
        should("test signatureGetObjectV2") {
            // uncomment below to test signatureGetObjectV2
            //val pkiSignatureID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Signature
            //val result : SignatureGetObjectV2Response = apiInstance.signatureGetObjectV2(pkiSignatureID)
            //result shouldBe ("TODO")
        }

        // to test signatureGetObjectV3
        should("test signatureGetObjectV3") {
            // uncomment below to test signatureGetObjectV3
            //val pkiSignatureID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Signature
            //val result : SignatureGetObjectV3Response = apiInstance.signatureGetObjectV3(pkiSignatureID)
            //result shouldBe ("TODO")
        }

        // to test signatureGetSVGInitialsV1
        should("test signatureGetSVGInitialsV1") {
            // uncomment below to test signatureGetSVGInitialsV1
            //val pkiSignatureID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Signature
            //apiInstance.signatureGetSVGInitialsV1(pkiSignatureID)
        }

        // to test signatureGetSVGSignatureV1
        should("test signatureGetSVGSignatureV1") {
            // uncomment below to test signatureGetSVGSignatureV1
            //val pkiSignatureID : kotlin.Int = 56 // kotlin.Int | The unique ID of the Signature
            //apiInstance.signatureGetSVGSignatureV1(pkiSignatureID)
        }

    }
}
