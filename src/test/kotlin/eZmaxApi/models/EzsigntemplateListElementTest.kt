/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.EzsigntemplateListElement
import eZmaxApi.models.FieldEEzsigntemplateType

class EzsigntemplateListElementTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EzsigntemplateListElement
        //val modelInstance = EzsigntemplateListElement()

        // to test the property `pkiEzsigntemplateID` - The unique ID of the Ezsigntemplate
        should("test pkiEzsigntemplateID") {
            // uncomment below to test the property
            //modelInstance.pkiEzsigntemplateID shouldBe ("TODO")
        }

        // to test the property `fkiLanguageID` - The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
        should("test fkiLanguageID") {
            // uncomment below to test the property
            //modelInstance.fkiLanguageID shouldBe ("TODO")
        }

        // to test the property `sEzsigntemplateDescription` - The description of the Ezsigntemplate
        should("test sEzsigntemplateDescription") {
            // uncomment below to test the property
            //modelInstance.sEzsigntemplateDescription shouldBe ("TODO")
        }

        // to test the property `bEzsigntemplateIncomplete` - Indicate the Ezsigntemplate is incomplete and cannot be used
        should("test bEzsigntemplateIncomplete") {
            // uncomment below to test the property
            //modelInstance.bEzsigntemplateIncomplete shouldBe ("TODO")
        }

        // to test the property `eEzsigntemplateType`
        should("test eEzsigntemplateType") {
            // uncomment below to test the property
            //modelInstance.eEzsigntemplateType shouldBe ("TODO")
        }

        // to test the property `fkiEzsignfoldertypeID` - The unique ID of the Ezsignfoldertype.
        should("test fkiEzsignfoldertypeID") {
            // uncomment below to test the property
            //modelInstance.fkiEzsignfoldertypeID shouldBe ("TODO")
        }

        // to test the property `iEzsigntemplatedocumentPagetotal` - The number of pages in the Ezsigntemplatedocument.
        should("test iEzsigntemplatedocumentPagetotal") {
            // uncomment below to test the property
            //modelInstance.iEzsigntemplatedocumentPagetotal shouldBe ("TODO")
        }

        // to test the property `iEzsigntemplateSignaturetotal` - The number of total signatures in the Ezsigntemplate.
        should("test iEzsigntemplateSignaturetotal") {
            // uncomment below to test the property
            //modelInstance.iEzsigntemplateSignaturetotal shouldBe ("TODO")
        }

        // to test the property `iEzsigntemplateFormfieldtotal` - The number of total form fields in the Ezsigntemplate.
        should("test iEzsigntemplateFormfieldtotal") {
            // uncomment below to test the property
            //modelInstance.iEzsigntemplateFormfieldtotal shouldBe ("TODO")
        }

        // to test the property `sEzsignfoldertypeNameX` - The name of the Ezsignfoldertype in the language of the requester
        should("test sEzsignfoldertypeNameX") {
            // uncomment below to test the property
            //modelInstance.sEzsignfoldertypeNameX shouldBe ("TODO")
        }

    }
}
