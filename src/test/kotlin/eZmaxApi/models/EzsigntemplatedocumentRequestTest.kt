/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.EzsigntemplatedocumentRequest

class EzsigntemplatedocumentRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EzsigntemplatedocumentRequest
        //val modelInstance = EzsigntemplatedocumentRequest()

        // to test the property `fkiEzsigntemplateID` - The unique ID of the Ezsigntemplate
        should("test fkiEzsigntemplateID") {
            // uncomment below to test the property
            //modelInstance.fkiEzsigntemplateID shouldBe ("TODO")
        }

        // to test the property `sEzsigntemplatedocumentName` - The name of the Ezsigntemplatedocument.
        should("test sEzsigntemplatedocumentName") {
            // uncomment below to test the property
            //modelInstance.sEzsigntemplatedocumentName shouldBe ("TODO")
        }

        // to test the property `eEzsigntemplatedocumentSource` - Indicates where to look for the document binary content.
        should("test eEzsigntemplatedocumentSource") {
            // uncomment below to test the property
            //modelInstance.eEzsigntemplatedocumentSource shouldBe ("TODO")
        }

        // to test the property `pkiEzsigntemplatedocumentID` - The unique ID of the Ezsigntemplatedocument
        should("test pkiEzsigntemplatedocumentID") {
            // uncomment below to test the property
            //modelInstance.pkiEzsigntemplatedocumentID shouldBe ("TODO")
        }

        // to test the property `fkiEzsigndocumentID` - The unique ID of the Ezsigndocument
        should("test fkiEzsigndocumentID") {
            // uncomment below to test the property
            //modelInstance.fkiEzsigndocumentID shouldBe ("TODO")
        }

        // to test the property `fkiEzsigntemplatesignerID` - The unique ID of the Ezsigntemplatesigner
        should("test fkiEzsigntemplatesignerID") {
            // uncomment below to test the property
            //modelInstance.fkiEzsigntemplatesignerID shouldBe ("TODO")
        }

        // to test the property `eEzsigntemplatedocumentFormat` - Indicates the format of the template.
        should("test eEzsigntemplatedocumentFormat") {
            // uncomment below to test the property
            //modelInstance.eEzsigntemplatedocumentFormat shouldBe ("TODO")
        }

        // to test the property `sEzsigntemplatedocumentBase64` - The Base64 encoded binary content of the document.  This field is Required when eEzsigntemplatedocumentSource = Base64.
        should("test sEzsigntemplatedocumentBase64") {
            // uncomment below to test the property
            //modelInstance.sEzsigntemplatedocumentBase64 shouldBe ("TODO")
        }

        // to test the property `sEzsigntemplatedocumentUrl` - The url where the document content resides.  This field is Required when eEzsigntemplatedocumentSource = Url.
        should("test sEzsigntemplatedocumentUrl") {
            // uncomment below to test the property
            //modelInstance.sEzsigntemplatedocumentUrl shouldBe ("TODO")
        }

        // to test the property `bEzsigntemplatedocumentForcerepair` - Try to repair the document or flatten it if it cannot be used for electronic signature.
        should("test bEzsigntemplatedocumentForcerepair") {
            // uncomment below to test the property
            //modelInstance.bEzsigntemplatedocumentForcerepair shouldBe ("TODO")
        }

        // to test the property `eEzsigntemplatedocumentForm` - If the document contains an existing PDF form this property must be set.  **Keep** leaves the form as-is in the document.  **Convert** removes the form and convert all the existing fields to Ezsigntemplateformfieldgroups and assign them to the specified **fkiEzsigntemplatesignerID**  **Discard** removes the form from the document
        should("test eEzsigntemplatedocumentForm") {
            // uncomment below to test the property
            //modelInstance.eEzsigntemplatedocumentForm shouldBe ("TODO")
        }

        // to test the property `sEzsigntemplatedocumentPassword` - If the source template is password protected, the password to open/modify it.
        should("test sEzsigntemplatedocumentPassword") {
            // uncomment below to test the property
            //modelInstance.sEzsigntemplatedocumentPassword shouldBe ("TODO")
        }

    }
}
