/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.SupplyResponseCompound
import eZmaxApi.models.MultilingualSupplyDescription

class SupplyResponseCompoundTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SupplyResponseCompound
        //val modelInstance = SupplyResponseCompound()

        // to test the property `pkiSupplyID` - The unique ID of the Supply
        should("test pkiSupplyID") {
            // uncomment below to test the property
            //modelInstance.pkiSupplyID shouldBe ("TODO")
        }

        // to test the property `fkiVariableexpenseID` - The unique ID of the Variableexpense
        should("test fkiVariableexpenseID") {
            // uncomment below to test the property
            //modelInstance.fkiVariableexpenseID shouldBe ("TODO")
        }

        // to test the property `sSupplyCode` - The code of the Supply
        should("test sSupplyCode") {
            // uncomment below to test the property
            //modelInstance.sSupplyCode shouldBe ("TODO")
        }

        // to test the property `objSupplyDescription`
        should("test objSupplyDescription") {
            // uncomment below to test the property
            //modelInstance.objSupplyDescription shouldBe ("TODO")
        }

        // to test the property `dSupplyUnitprice` - The unit price of the Supply
        should("test dSupplyUnitprice") {
            // uncomment below to test the property
            //modelInstance.dSupplyUnitprice shouldBe ("TODO")
        }

        // to test the property `bSupplyIsactive` - Whether the supply is active or not
        should("test bSupplyIsactive") {
            // uncomment below to test the property
            //modelInstance.bSupplyIsactive shouldBe ("TODO")
        }

        // to test the property `bSupplyVariableprice` - Whether if the price is variable
        should("test bSupplyVariableprice") {
            // uncomment below to test the property
            //modelInstance.bSupplyVariableprice shouldBe ("TODO")
        }

        // to test the property `fkiGlaccountID` - The unique ID of the Glaccount
        should("test fkiGlaccountID") {
            // uncomment below to test the property
            //modelInstance.fkiGlaccountID shouldBe ("TODO")
        }

        // to test the property `fkiGlaccountcontainerID` - The unique ID of the Glaccountcontainer
        should("test fkiGlaccountcontainerID") {
            // uncomment below to test the property
            //modelInstance.fkiGlaccountcontainerID shouldBe ("TODO")
        }

        // to test the property `sGlaccountDescriptionX` - The Description for the Glaccount in the language of the requester
        should("test sGlaccountDescriptionX") {
            // uncomment below to test the property
            //modelInstance.sGlaccountDescriptionX shouldBe ("TODO")
        }

        // to test the property `sGlaccountcontainerLongdescriptionX` - The Description for the Glaccountcontainer in the language of the requester
        should("test sGlaccountcontainerLongdescriptionX") {
            // uncomment below to test the property
            //modelInstance.sGlaccountcontainerLongdescriptionX shouldBe ("TODO")
        }

        // to test the property `sVariableexpenseDescriptionX` - The description of the Variableexpense in the language of the requester
        should("test sVariableexpenseDescriptionX") {
            // uncomment below to test the property
            //modelInstance.sVariableexpenseDescriptionX shouldBe ("TODO")
        }

    }
}
