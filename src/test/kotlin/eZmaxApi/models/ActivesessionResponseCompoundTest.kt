/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.ActivesessionResponseCompound
import eZmaxApi.models.ActivesessionResponse
import eZmaxApi.models.ActivesessionResponseCompoundApikey
import eZmaxApi.models.ActivesessionResponseCompoundUser
import eZmaxApi.models.FieldEActivesessionEzsign
import eZmaxApi.models.FieldEActivesessionEzsignaccess
import eZmaxApi.models.FieldEActivesessionEzsignprepaid
import eZmaxApi.models.FieldEActivesessionOrigin
import eZmaxApi.models.FieldEActivesessionRealestateinprogress
import eZmaxApi.models.FieldEActivesessionUsertype
import eZmaxApi.models.FieldEActivesessionWeekdaystart
import eZmaxApi.models.FieldESystemconfigurationEzsignofficeplan
import eZmaxApi.models.FieldEUserEzsignaccess
import eZmaxApi.models.FieldEUserEzsignprepaid

class ActivesessionResponseCompoundTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ActivesessionResponseCompound
        //val modelInstance = ActivesessionResponseCompound()

        // to test the property `eUserEzsignaccess`
        should("test eUserEzsignaccess") {
            // uncomment below to test the property
            //modelInstance.eUserEzsignaccess shouldBe ("TODO")
        }

        // to test the property `aPkiPermissionID` - An array of permissions granted to the user or api key
        should("test aPkiPermissionID") {
            // uncomment below to test the property
            //modelInstance.aPkiPermissionID shouldBe ("TODO")
        }

        // to test the property `objUserReal`
        should("test objUserReal") {
            // uncomment below to test the property
            //modelInstance.objUserReal shouldBe ("TODO")
        }

        // to test the property `aEModuleInternalname` - An Array of Registered modules.  These are the modules that are Licensed to be used by the User or the API Key.
        should("test aEModuleInternalname") {
            // uncomment below to test the property
            //modelInstance.aEModuleInternalname shouldBe ("TODO")
        }

        // to test the property `fkiEzsignuserID` - The unique ID of the Ezsignuser
        should("test fkiEzsignuserID") {
            // uncomment below to test the property
            //modelInstance.fkiEzsignuserID shouldBe ("TODO")
        }

        // to test the property `bSystemconfigurationEzsignpaidbyoffice` - Whether if Ezsign is paid by the company or not
        should("test bSystemconfigurationEzsignpaidbyoffice") {
            // uncomment below to test the property
            //modelInstance.bSystemconfigurationEzsignpaidbyoffice shouldBe ("TODO")
        }

        // to test the property `eSystemconfigurationEzsignofficeplan`
        should("test eSystemconfigurationEzsignofficeplan") {
            // uncomment below to test the property
            //modelInstance.eSystemconfigurationEzsignofficeplan shouldBe ("TODO")
        }

        // to test the property `eUserEzsignprepaid`
        should("test eUserEzsignprepaid") {
            // uncomment below to test the property
            //modelInstance.eUserEzsignprepaid shouldBe ("TODO")
        }

        // to test the property `bUserEzsigntrial` - Whether the User's eZsign subscription is a trial
        should("test bUserEzsigntrial") {
            // uncomment below to test the property
            //modelInstance.bUserEzsigntrial shouldBe ("TODO")
        }

        // to test the property `dtUserEzsignprepaidexpiration` - The eZsign prepaid expiration date
        should("test dtUserEzsignprepaidexpiration") {
            // uncomment below to test the property
            //modelInstance.dtUserEzsignprepaidexpiration shouldBe ("TODO")
        }

        // to test the property `objUserCloned`
        should("test objUserCloned") {
            // uncomment below to test the property
            //modelInstance.objUserCloned shouldBe ("TODO")
        }

        // to test the property `objApikey`
        should("test objApikey") {
            // uncomment below to test the property
            //modelInstance.objApikey shouldBe ("TODO")
        }

    }
}
