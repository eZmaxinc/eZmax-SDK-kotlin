/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.CreditcardmerchantResponse

class CreditcardmerchantResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreditcardmerchantResponse
        //val modelInstance = CreditcardmerchantResponse()

        // to test the property `pkiCreditcardmerchantID` - The unique ID of the Creditcardmerchant
        should("test pkiCreditcardmerchantID") {
            // uncomment below to test the property
            //modelInstance.pkiCreditcardmerchantID shouldBe ("TODO")
        }

        // to test the property `fkiBankaccountID` - The unique ID of the Bankaccount
        should("test fkiBankaccountID") {
            // uncomment below to test the property
            //modelInstance.fkiBankaccountID shouldBe ("TODO")
        }

        // to test the property `bCreditcardmerchantDenyvisa` - Whether if visa are denied
        should("test bCreditcardmerchantDenyvisa") {
            // uncomment below to test the property
            //modelInstance.bCreditcardmerchantDenyvisa shouldBe ("TODO")
        }

        // to test the property `bCreditcardmerchantDenymastercard` - Whether if mastercard are denied
        should("test bCreditcardmerchantDenymastercard") {
            // uncomment below to test the property
            //modelInstance.bCreditcardmerchantDenymastercard shouldBe ("TODO")
        }

        // to test the property `bCreditcardmerchantDenyamex` - Whether if amex are denied
        should("test bCreditcardmerchantDenyamex") {
            // uncomment below to test the property
            //modelInstance.bCreditcardmerchantDenyamex shouldBe ("TODO")
        }

        // to test the property `bCreditcardmerchantIsactive` - Whether the creditcardmerchant is active or not
        should("test bCreditcardmerchantIsactive") {
            // uncomment below to test the property
            //modelInstance.bCreditcardmerchantIsactive shouldBe ("TODO")
        }

        // to test the property `sCreditcardmerchantDescription` - The description of the Creditcardmerchant
        should("test sCreditcardmerchantDescription") {
            // uncomment below to test the property
            //modelInstance.sCreditcardmerchantDescription shouldBe ("TODO")
        }

        // to test the property `sCreditcardmerchantStoreid` - The storeid of the Creditcardmerchant
        should("test sCreditcardmerchantStoreid") {
            // uncomment below to test the property
            //modelInstance.sCreditcardmerchantStoreid shouldBe ("TODO")
        }

        // to test the property `sBankaccountBankname` - The name of the bank
        should("test sBankaccountBankname") {
            // uncomment below to test the property
            //modelInstance.sBankaccountBankname shouldBe ("TODO")
        }

        // to test the property `fkiLanguageID` - The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
        should("test fkiLanguageID") {
            // uncomment below to test the property
            //modelInstance.fkiLanguageID shouldBe ("TODO")
        }

        // to test the property `sLanguageNameX` - The Name of the Language in the language of the requester
        should("test sLanguageNameX") {
            // uncomment below to test the property
            //modelInstance.sLanguageNameX shouldBe ("TODO")
        }

    }
}
