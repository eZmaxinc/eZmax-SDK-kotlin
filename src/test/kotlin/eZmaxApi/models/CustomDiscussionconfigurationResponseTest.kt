/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.CustomDiscussionconfigurationResponse

class CustomDiscussionconfigurationResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CustomDiscussionconfigurationResponse
        //val modelInstance = CustomDiscussionconfigurationResponse()

        // to test the property `bDiscussionconfigurationCompletehistorywhenadded` - If the added Discussionmembership will have access to the entire history or not
        should("test bDiscussionconfigurationCompletehistorywhenadded") {
            // uncomment below to test the property
            //modelInstance.bDiscussionconfigurationCompletehistorywhenadded shouldBe ("TODO")
        }

        // to test the property `bDiscussionconfigurationCreateallowed` - If the the creation of the Discussion is allowed or not
        should("test bDiscussionconfigurationCreateallowed") {
            // uncomment below to test the property
            //modelInstance.bDiscussionconfigurationCreateallowed shouldBe ("TODO")
        }

        // to test the property `bDiscussionconfigurationDeleteallowed` - If the the destruction of the Discussion is allowed or not
        should("test bDiscussionconfigurationDeleteallowed") {
            // uncomment below to test the property
            //modelInstance.bDiscussionconfigurationDeleteallowed shouldBe ("TODO")
        }

        // to test the property `bDiscussionconfigurationDeletediscussionmessageallowed` - If the the destruction of the Discussionmessage is allowed or not
        should("test bDiscussionconfigurationDeletediscussionmessageallowed") {
            // uncomment below to test the property
            //modelInstance.bDiscussionconfigurationDeletediscussionmessageallowed shouldBe ("TODO")
        }

        // to test the property `bDiscussionconfigurationEditdiscussionmessageallowed` - If the the creation of the Discussionmessage is allowed or not
        should("test bDiscussionconfigurationEditdiscussionmessageallowed") {
            // uncomment below to test the property
            //modelInstance.bDiscussionconfigurationEditdiscussionmessageallowed shouldBe ("TODO")
        }

    }
}
