/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.EzsigntsarequirementAutocompleteElementResponse

class EzsigntsarequirementAutocompleteElementResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EzsigntsarequirementAutocompleteElementResponse
        //val modelInstance = EzsigntsarequirementAutocompleteElementResponse()

        // to test the property `sEzsigntsarequirementDescriptionX` - The description of the Ezsigntsarequirement in the language of the requester
        should("test sEzsigntsarequirementDescriptionX") {
            // uncomment below to test the property
            //modelInstance.sEzsigntsarequirementDescriptionX shouldBe ("TODO")
        }

        // to test the property `pkiEzsigntsarequirementID` - The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
        should("test pkiEzsigntsarequirementID") {
            // uncomment below to test the property
            //modelInstance.pkiEzsigntsarequirementID shouldBe ("TODO")
        }

        // to test the property `bEzsigntsarequirementIsactive` - Whether the Ezsigntsarequirement is active or not
        should("test bEzsigntsarequirementIsactive") {
            // uncomment below to test the property
            //modelInstance.bEzsigntsarequirementIsactive shouldBe ("TODO")
        }

        // to test the property `bDisabled` - Indicates if the element is disabled in the context
        should("test bDisabled") {
            // uncomment below to test the property
            //modelInstance.bDisabled shouldBe ("TODO")
        }

    }
}
