/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.ClonehistoryListElement

class ClonehistoryListElementTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ClonehistoryListElement
        //val modelInstance = ClonehistoryListElement()

        // to test the property `pkiClonehistoryID` - The unique ID of the Clonehistory
        should("test pkiClonehistoryID") {
            // uncomment below to test the property
            //modelInstance.pkiClonehistoryID shouldBe ("TODO")
        }

        // to test the property `fkiUserIDCloning` - The unique ID of the User
        should("test fkiUserIDCloning") {
            // uncomment below to test the property
            //modelInstance.fkiUserIDCloning shouldBe ("TODO")
        }

        // to test the property `fkiUserIDCloned` - The unique ID of the User
        should("test fkiUserIDCloned") {
            // uncomment below to test the property
            //modelInstance.fkiUserIDCloned shouldBe ("TODO")
        }

        // to test the property `dtClonehistoryFirsthit` - The firsthit of the Clonehistory
        should("test dtClonehistoryFirsthit") {
            // uncomment below to test the property
            //modelInstance.dtClonehistoryFirsthit shouldBe ("TODO")
        }

        // to test the property `sUserLoginnameCloning` - The login name of the User.
        should("test sUserLoginnameCloning") {
            // uncomment below to test the property
            //modelInstance.sUserLoginnameCloning shouldBe ("TODO")
        }

        // to test the property `sUserFirstnameCloning` - The first name of the user
        should("test sUserFirstnameCloning") {
            // uncomment below to test the property
            //modelInstance.sUserFirstnameCloning shouldBe ("TODO")
        }

        // to test the property `sUserLastnameCloning` - The last name of the user
        should("test sUserLastnameCloning") {
            // uncomment below to test the property
            //modelInstance.sUserLastnameCloning shouldBe ("TODO")
        }

        // to test the property `sUserLoginnameCloned` - The login name of the User.
        should("test sUserLoginnameCloned") {
            // uncomment below to test the property
            //modelInstance.sUserLoginnameCloned shouldBe ("TODO")
        }

        // to test the property `sUserFirstnameCloned` - The first name of the user
        should("test sUserFirstnameCloned") {
            // uncomment below to test the property
            //modelInstance.sUserFirstnameCloned shouldBe ("TODO")
        }

        // to test the property `sUserLastnameCloned` - The last name of the user
        should("test sUserLastnameCloned") {
            // uncomment below to test the property
            //modelInstance.sUserLastnameCloned shouldBe ("TODO")
        }

        // to test the property `dtClonehistoryLasthit` - The lasthit of the Clonehistory
        should("test dtClonehistoryLasthit") {
            // uncomment below to test the property
            //modelInstance.dtClonehistoryLasthit shouldBe ("TODO")
        }

    }
}
