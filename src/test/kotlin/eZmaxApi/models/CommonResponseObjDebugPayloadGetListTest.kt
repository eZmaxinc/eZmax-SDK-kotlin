/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.CommonResponseObjDebugPayloadGetList
import eZmaxApi.models.CommonResponseFilter

class CommonResponseObjDebugPayloadGetListTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CommonResponseObjDebugPayloadGetList
        //val modelInstance = CommonResponseObjDebugPayloadGetList()

        // to test the property `iVersionMin` - The minimum version of the function that can be called
        should("test iVersionMin") {
            // uncomment below to test the property
            //modelInstance.iVersionMin shouldBe ("TODO")
        }

        // to test the property `iVersionMax` - The maximum version of the function that can be called
        should("test iVersionMax") {
            // uncomment below to test the property
            //modelInstance.iVersionMax shouldBe ("TODO")
        }

        // to test the property `aRequiredPermission` - An array of permissions required to access this function.  If the value \"0\" is present in the array, anyone can call this function.  You must have one of the permission to access the function. You don't need to have all of them.
        should("test aRequiredPermission") {
            // uncomment below to test the property
            //modelInstance.aRequiredPermission shouldBe ("TODO")
        }

        // to test the property `bVersionDeprecated` - Wheter the current route is deprecated or not
        should("test bVersionDeprecated") {
            // uncomment below to test the property
            //modelInstance.bVersionDeprecated shouldBe ("TODO")
        }

        // to test the property `aFilter`
        should("test aFilter") {
            // uncomment below to test the property
            //modelInstance.aFilter shouldBe ("TODO")
        }

        // to test the property `aOrderBy` - List of available values for *eOrderBy*
        should("test aOrderBy") {
            // uncomment below to test the property
            //modelInstance.aOrderBy shouldBe ("TODO")
        }

        // to test the property `iRowMax` - The maximum numbers of results to be returned.  When the content-type is **application/json** there is an implicit default of 10 000.  When it's **application/vnd.openxmlformats-officedocument.spreadsheetml.sheet** the is no implicit default so if you do not specify iRowMax, all records will be returned.
        should("test iRowMax") {
            // uncomment below to test the property
            //modelInstance.iRowMax shouldBe ("TODO")
        }

        // to test the property `iRowOffset` - The starting element from where to start retrieving the results. For example if you started at iRowOffset=0 and asked for iRowMax=100, to get the next 100 results, you could specify iRowOffset=100&iRowMax=100,
        should("test iRowOffset") {
            // uncomment below to test the property
            //modelInstance.iRowOffset shouldBe ("TODO")
        }

    }
}
