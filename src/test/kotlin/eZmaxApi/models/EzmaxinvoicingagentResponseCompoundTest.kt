/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import eZmaxApi.models.EzmaxinvoicingagentResponseCompound
import eZmaxApi.models.CustomContactNameResponse
import eZmaxApi.models.FieldEEzmaxinvoicingagentVariationezmax
import eZmaxApi.models.FieldEEzmaxinvoicingagentVariationezsign

class EzmaxinvoicingagentResponseCompoundTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EzmaxinvoicingagentResponseCompound
        //val modelInstance = EzmaxinvoicingagentResponseCompound()

        // to test the property `fkiBillingentityinternalID` - The unique ID of the Billingentityinternal.
        should("test fkiBillingentityinternalID") {
            // uncomment below to test the property
            //modelInstance.fkiBillingentityinternalID shouldBe ("TODO")
        }

        // to test the property `sBillingentityinternalDescriptionX` - The description of the Billingentityinternal in the language of the requester
        should("test sBillingentityinternalDescriptionX") {
            // uncomment below to test the property
            //modelInstance.sBillingentityinternalDescriptionX shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentSession` - The number of sessions
        should("test iEzmaxinvoicingagentSession") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentSession shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentCloned` - The number of times this user was cloned
        should("test iEzmaxinvoicingagentCloned") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentCloned shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentInvoice` - The number of invoices
        should("test iEzmaxinvoicingagentInvoice") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentInvoice shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentInscription` - The number of inscriptions
        should("test iEzmaxinvoicingagentInscription") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentInscription shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentInscriptionactive` - The number of active inscriptions
        should("test iEzmaxinvoicingagentInscriptionactive") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentInscriptionactive shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentSale` - The number of sales
        should("test iEzmaxinvoicingagentSale") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentSale shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentOtherincome` - The number of otherincomes
        should("test iEzmaxinvoicingagentOtherincome") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentOtherincome shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentCommissioncalculation` - The number of commission calculations
        should("test iEzmaxinvoicingagentCommissioncalculation") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentCommissioncalculation shouldBe ("TODO")
        }

        // to test the property `iEzmaxinvoicingagentEzsigndocument` - The number of ezsign documents
        should("test iEzmaxinvoicingagentEzsigndocument") {
            // uncomment below to test the property
            //modelInstance.iEzmaxinvoicingagentEzsigndocument shouldBe ("TODO")
        }

        // to test the property `bEzmaxinvoicingagentEzsignaccount` - Whether the agent has an eZsign account
        should("test bEzmaxinvoicingagentEzsignaccount") {
            // uncomment below to test the property
            //modelInstance.bEzmaxinvoicingagentEzsignaccount shouldBe ("TODO")
        }

        // to test the property `bEzmaxinvoicingagentBillableezmax` - Whether it is billable for eZmax
        should("test bEzmaxinvoicingagentBillableezmax") {
            // uncomment below to test the property
            //modelInstance.bEzmaxinvoicingagentBillableezmax shouldBe ("TODO")
        }

        // to test the property `eEzmaxinvoicingagentVariationezmax`
        should("test eEzmaxinvoicingagentVariationezmax") {
            // uncomment below to test the property
            //modelInstance.eEzmaxinvoicingagentVariationezmax shouldBe ("TODO")
        }

        // to test the property `bEzmaxinvoicingagentBillableezsign` - Whether it is billable for eZsign
        should("test bEzmaxinvoicingagentBillableezsign") {
            // uncomment below to test the property
            //modelInstance.bEzmaxinvoicingagentBillableezsign shouldBe ("TODO")
        }

        // to test the property `eEzmaxinvoicingagentVariationezsign`
        should("test eEzmaxinvoicingagentVariationezsign") {
            // uncomment below to test the property
            //modelInstance.eEzmaxinvoicingagentVariationezsign shouldBe ("TODO")
        }

        // to test the property `objContactName`
        should("test objContactName") {
            // uncomment below to test the property
            //modelInstance.objContactName shouldBe ("TODO")
        }

        // to test the property `pkiEzmaxinvoicingagentID` - The unique ID of the Ezmaxinvoicingagent
        should("test pkiEzmaxinvoicingagentID") {
            // uncomment below to test the property
            //modelInstance.pkiEzmaxinvoicingagentID shouldBe ("TODO")
        }

        // to test the property `fkiEzmaxinvoicingID` - The unique ID of the Ezmaxinvoicing
        should("test fkiEzmaxinvoicingID") {
            // uncomment below to test the property
            //modelInstance.fkiEzmaxinvoicingID shouldBe ("TODO")
        }

        // to test the property `fkiAgentID` - The unique ID of the Agent.
        should("test fkiAgentID") {
            // uncomment below to test the property
            //modelInstance.fkiAgentID shouldBe ("TODO")
        }

        // to test the property `fkiBrokerID` - The unique ID of the Broker.
        should("test fkiBrokerID") {
            // uncomment below to test the property
            //modelInstance.fkiBrokerID shouldBe ("TODO")
        }

    }
}
