/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.CustomCommunicationsenderRequest
import eZmaxApi.models.FieldECommunicationImportance
import eZmaxApi.models.FieldECommunicationType

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Request for POST /1/object/communication
 *
 * @param eCommunicationType 
 * @param tCommunicationBody The Body of the Communication
 * @param bCommunicationPrivate Whether the Communication is private or not
 * @param pkiCommunicationID The unique ID of the Communication.
 * @param eCommunicationImportance 
 * @param objCommunicationsender 
 * @param sCommunicationSubject The subject of the Communication
 * @param eCommunicationAttachmenttype How the attachment should be included in the email.   Only used if eCommunicationType is **Email**
 * @param iCommunicationAttachmentlinkexpiration The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link**
 * @param bCommunicationReadreceipt Whether we ask for a read receipt or not.
 */


data class CommunicationRequest (

    @Json(name = "eCommunicationType")
    val eCommunicationType: FieldECommunicationType,

    /* The Body of the Communication */
    @Json(name = "tCommunicationBody")
    val tCommunicationBody: kotlin.String,

    /* Whether the Communication is private or not */
    @Json(name = "bCommunicationPrivate")
    val bCommunicationPrivate: kotlin.Boolean,

    /* The unique ID of the Communication. */
    @Json(name = "pkiCommunicationID")
    val pkiCommunicationID: kotlin.Int? = null,

    @Json(name = "eCommunicationImportance")
    val eCommunicationImportance: FieldECommunicationImportance? = null,

    @Json(name = "objCommunicationsender")
    val objCommunicationsender: CustomCommunicationsenderRequest? = null,

    /* The subject of the Communication */
    @Json(name = "sCommunicationSubject")
    val sCommunicationSubject: kotlin.String? = null,

    /* How the attachment should be included in the email.   Only used if eCommunicationType is **Email** */
    @Json(name = "eCommunicationAttachmenttype")
    val eCommunicationAttachmenttype: CommunicationRequest.ECommunicationAttachmenttype? = null,

    /* The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link** */
    @Json(name = "iCommunicationAttachmentlinkexpiration")
    val iCommunicationAttachmentlinkexpiration: kotlin.Int? = null,

    /* Whether we ask for a read receipt or not. */
    @Json(name = "bCommunicationReadreceipt")
    val bCommunicationReadreceipt: kotlin.Boolean? = null

) {

    /**
     * How the attachment should be included in the email.   Only used if eCommunicationType is **Email**
     *
     * Values: Attachment,Url
     */
    @JsonClass(generateAdapter = false)
    enum class ECommunicationAttachmenttype(val value: kotlin.String) {
        @Json(name = "Attachment") Attachment("Attachment"),
        @Json(name = "Url") Url("Url");
    }

}

