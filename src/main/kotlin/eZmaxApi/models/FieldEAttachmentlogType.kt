/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The Type for the Attachmentlog
 *
 * Values: AutoValidation,CopyFrom,CopyTo,CopyToEzsign,CreateByEzsign,Download,Deleted,Destroyed,Email,EmailCC,EmailCCI,Fax,ImportedFromExternalSystem,ImportedFromEZA,ImportedFromFaltour,ImportedFromLonewolf,ImportedFromProspects,Move,OpenFromEmail,Purged,Reject,Rename,Restore,Scanned,SendToGED,UnvalidatedBy,Upload,ValidatedBy,VetinfoUpload
 */

@JsonClass(generateAdapter = false)
enum class FieldEAttachmentlogType(val value: kotlin.String) {

    @Json(name = "AutoValidation")
    AutoValidation("AutoValidation"),

    @Json(name = "CopyFrom")
    CopyFrom("CopyFrom"),

    @Json(name = "CopyTo")
    CopyTo("CopyTo"),

    @Json(name = "CopyToEzsign")
    CopyToEzsign("CopyToEzsign"),

    @Json(name = "CreateByEzsign")
    CreateByEzsign("CreateByEzsign"),

    @Json(name = "Download")
    Download("Download"),

    @Json(name = "Deleted")
    Deleted("Deleted"),

    @Json(name = "Destroyed")
    Destroyed("Destroyed"),

    @Json(name = "Email")
    Email("Email"),

    @Json(name = "EmailCC")
    EmailCC("EmailCC"),

    @Json(name = "EmailCCI")
    EmailCCI("EmailCCI"),

    @Json(name = "Fax")
    Fax("Fax"),

    @Json(name = "ImportedFromExternalSystem")
    ImportedFromExternalSystem("ImportedFromExternalSystem"),

    @Json(name = "ImportedFromEZA")
    ImportedFromEZA("ImportedFromEZA"),

    @Json(name = "ImportedFromFaltour")
    ImportedFromFaltour("ImportedFromFaltour"),

    @Json(name = "ImportedFromLonewolf")
    ImportedFromLonewolf("ImportedFromLonewolf"),

    @Json(name = "ImportedFromProspects")
    ImportedFromProspects("ImportedFromProspects"),

    @Json(name = "Move")
    Move("Move"),

    @Json(name = "OpenFromEmail")
    OpenFromEmail("OpenFromEmail"),

    @Json(name = "Purged")
    Purged("Purged"),

    @Json(name = "Reject")
    Reject("Reject"),

    @Json(name = "Rename")
    Rename("Rename"),

    @Json(name = "Restore")
    Restore("Restore"),

    @Json(name = "Scanned")
    Scanned("Scanned"),

    @Json(name = "SendToGED")
    SendToGED("SendToGED"),

    @Json(name = "UnvalidatedBy")
    UnvalidatedBy("UnvalidatedBy"),

    @Json(name = "Upload")
    Upload("Upload"),

    @Json(name = "ValidatedBy")
    ValidatedBy("ValidatedBy"),

    @Json(name = "VetinfoUpload")
    VetinfoUpload("VetinfoUpload");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is FieldEAttachmentlogType) "$data" else null

        /**
         * Returns a valid [FieldEAttachmentlogType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): FieldEAttachmentlogType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

