/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.FieldEEzsignfolderDocumentdependency

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * An Ezsignfolder Object and children to create a complete structure
 *
 * @param fkiEzsignfoldertypeID The unique ID of the Ezsignfoldertype.
 * @param sEzsignfolderDescription The description of the Ezsignfolder
 * @param iEzsignfolderSendreminderfirstdays The number of days before the the first reminder sending
 * @param iEzsignfolderSendreminderotherdays The number of days after the first reminder sending
 * @param pkiEzsignfolderID The unique ID of the Ezsignfolder
 * @param fkiTimezoneID The unique ID of the Timezone
 * @param fkiEzsigntsarequirementID The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
 * @param eEzsignfolderDocumentdependency 
 * @param tEzsignfolderNote Note about the Ezsignfolder
 * @param tEzsignfolderMessage A custom text message that will be added to the email sent.
 * @param sEzsignfolderExternalid This field can be used to store an External ID from the client's system.  Anything can be stored in this field, it will never be evaluated by the eZmax system and will be returned AS-IS.  To store multiple values, consider using a JSON formatted structure, a URL encoded string, a CSV or any other custom format. 
 */


data class EzsignfolderRequestCompoundV3 (

    /* The unique ID of the Ezsignfoldertype. */
    @Json(name = "fkiEzsignfoldertypeID")
    val fkiEzsignfoldertypeID: kotlin.Int,

    /* The description of the Ezsignfolder */
    @Json(name = "sEzsignfolderDescription")
    val sEzsignfolderDescription: kotlin.String,

    /* The number of days before the the first reminder sending */
    @Json(name = "iEzsignfolderSendreminderfirstdays")
    val iEzsignfolderSendreminderfirstdays: kotlin.Int,

    /* The number of days after the first reminder sending */
    @Json(name = "iEzsignfolderSendreminderotherdays")
    val iEzsignfolderSendreminderotherdays: kotlin.Int,

    /* The unique ID of the Ezsignfolder */
    @Json(name = "pkiEzsignfolderID")
    val pkiEzsignfolderID: kotlin.Int? = null,

    /* The unique ID of the Timezone */
    @Json(name = "fkiTimezoneID")
    val fkiTimezoneID: kotlin.Int? = null,

    /* The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**| */
    @Json(name = "fkiEzsigntsarequirementID")
    val fkiEzsigntsarequirementID: kotlin.Int? = null,

    @Json(name = "eEzsignfolderDocumentdependency")
    val eEzsignfolderDocumentdependency: FieldEEzsignfolderDocumentdependency? = null,

    /* Note about the Ezsignfolder */
    @Json(name = "tEzsignfolderNote")
    val tEzsignfolderNote: kotlin.String? = null,

    /* A custom text message that will be added to the email sent. */
    @Json(name = "tEzsignfolderMessage")
    val tEzsignfolderMessage: kotlin.String? = null,

    /* This field can be used to store an External ID from the client's system.  Anything can be stored in this field, it will never be evaluated by the eZmax system and will be returned AS-IS.  To store multiple values, consider using a JSON formatted structure, a URL encoded string, a CSV or any other custom format.  */
    @Json(name = "sEzsignfolderExternalid")
    val sEzsignfolderExternalid: kotlin.String? = null

) {


}

