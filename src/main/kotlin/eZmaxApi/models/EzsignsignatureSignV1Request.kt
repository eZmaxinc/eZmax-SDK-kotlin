/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.CommonFile
import eZmaxApi.models.CustomCreditcardRequest

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Request for POST /1/object/ezsignsignature/{pkiEzsignsignatureID}/sign
 *
 * @param bIsAutomatic Indicates if the Ezsignsignature was part of an automatic process or not.  This can only be true if eEzsignsignatureType is **Acknowledgement**, **City**, **Signature**, **Initials** or **Stamp**. 
 * @param fkiEzsignsigningreasonID The unique ID of the Ezsignsigningreason
 * @param fkiFontID The unique ID of the Font
 * @param sValue The value required for the Ezsignsignature.  This can only be set if eEzsignsignatureType is **City**, **FieldText** or **FieldTextarea**
 * @param eAttachmentsConfirmationDecision Whether the attachment are accepted or refused.  This can only be set if eEzsignsignatureType is **AttachmentsConfirmation**
 * @param sAttachmentsRefusalReason The reason of refused.  This can only be set if eEzsignsignatureType is **AttachmentsConfirmation**
 * @param sSvg The SVG of the signature.  This can only be set if eEzsignsignatureType is **Signature**_/_**Initials** and **bIsAutomatic** is false
 * @param aObjFile 
 * @param objCreditcard 
 */


data class EzsignsignatureSignV1Request (

    /* Indicates if the Ezsignsignature was part of an automatic process or not.  This can only be true if eEzsignsignatureType is **Acknowledgement**, **City**, **Signature**, **Initials** or **Stamp**.  */
    @Json(name = "bIsAutomatic")
    val bIsAutomatic: kotlin.Boolean,

    /* The unique ID of the Ezsignsigningreason */
    @Json(name = "fkiEzsignsigningreasonID")
    val fkiEzsignsigningreasonID: kotlin.Int? = null,

    /* The unique ID of the Font */
    @Json(name = "fkiFontID")
    val fkiFontID: kotlin.Int? = null,

    /* The value required for the Ezsignsignature.  This can only be set if eEzsignsignatureType is **City**, **FieldText** or **FieldTextarea** */
    @Json(name = "sValue")
    val sValue: kotlin.String? = null,

    /* Whether the attachment are accepted or refused.  This can only be set if eEzsignsignatureType is **AttachmentsConfirmation** */
    @Json(name = "eAttachmentsConfirmationDecision")
    val eAttachmentsConfirmationDecision: EzsignsignatureSignV1Request.EAttachmentsConfirmationDecision? = null,

    /* The reason of refused.  This can only be set if eEzsignsignatureType is **AttachmentsConfirmation** */
    @Json(name = "sAttachmentsRefusalReason")
    val sAttachmentsRefusalReason: kotlin.String? = null,

    /* The SVG of the signature.  This can only be set if eEzsignsignatureType is **Signature**_/_**Initials** and **bIsAutomatic** is false */
    @Json(name = "sSvg")
    val sSvg: kotlin.String? = null,

    @Json(name = "a_objFile")
    val aObjFile: kotlin.collections.List<CommonFile>? = null,

    @Json(name = "objCreditcard")
    val objCreditcard: CustomCreditcardRequest? = null

) {

    /**
     * Whether the attachment are accepted or refused.  This can only be set if eEzsignsignatureType is **AttachmentsConfirmation**
     *
     * Values: Accepted,Refused
     */
    @JsonClass(generateAdapter = false)
    enum class EAttachmentsConfirmationDecision(val value: kotlin.String) {
        @Json(name = "Accepted") Accepted("Accepted"),
        @Json(name = "Refused") Refused("Refused");
    }

}

