/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.FieldEBrandingLogo
import eZmaxApi.models.MultilingualBrandingDescription

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A Branding Object
 *
 * @param pkiBrandingID The unique ID of the Branding
 * @param objBrandingDescription 
 * @param sBrandingDescriptionX The Description of the Branding in the language of the requester
 * @param eBrandingLogo 
 * @param iBrandingColortext The color of the text. This is a RGB color converted into integer
 * @param iBrandingColortextlinkbox The color of the text in the link box. This is a RGB color converted into integer
 * @param iBrandingColortextbutton The color of the text in the button. This is a RGB color converted into integer
 * @param iBrandingColorbackground The color of the background. This is a RGB color converted into integer
 * @param iBrandingColorbackgroundbutton The color of the background of the button. This is a RGB color converted into integer
 * @param iBrandingColorbackgroundsmallbox The color of the background of the small box. This is a RGB color converted into integer
 * @param bBrandingIsactive Whether the Branding is active or not
 * @param fkiEmailID The unique ID of the Email
 * @param sBrandingName The name of the Branding  This value will only be set if you wish to overwrite the default name. If you want to keep the default name, leave this property empty
 * @param sEmailAddress The email address.
 */


data class BrandingResponse (

    /* The unique ID of the Branding */
    @Json(name = "pkiBrandingID")
    val pkiBrandingID: kotlin.Int,

    @Json(name = "objBrandingDescription")
    val objBrandingDescription: MultilingualBrandingDescription,

    /* The Description of the Branding in the language of the requester */
    @Json(name = "sBrandingDescriptionX")
    val sBrandingDescriptionX: kotlin.String,

    @Json(name = "eBrandingLogo")
    val eBrandingLogo: FieldEBrandingLogo,

    /* The color of the text. This is a RGB color converted into integer */
    @Json(name = "iBrandingColortext")
    val iBrandingColortext: kotlin.Int,

    /* The color of the text in the link box. This is a RGB color converted into integer */
    @Json(name = "iBrandingColortextlinkbox")
    val iBrandingColortextlinkbox: kotlin.Int,

    /* The color of the text in the button. This is a RGB color converted into integer */
    @Json(name = "iBrandingColortextbutton")
    val iBrandingColortextbutton: kotlin.Int,

    /* The color of the background. This is a RGB color converted into integer */
    @Json(name = "iBrandingColorbackground")
    val iBrandingColorbackground: kotlin.Int,

    /* The color of the background of the button. This is a RGB color converted into integer */
    @Json(name = "iBrandingColorbackgroundbutton")
    val iBrandingColorbackgroundbutton: kotlin.Int,

    /* The color of the background of the small box. This is a RGB color converted into integer */
    @Json(name = "iBrandingColorbackgroundsmallbox")
    val iBrandingColorbackgroundsmallbox: kotlin.Int,

    /* Whether the Branding is active or not */
    @Json(name = "bBrandingIsactive")
    val bBrandingIsactive: kotlin.Boolean,

    /* The unique ID of the Email */
    @Json(name = "fkiEmailID")
    val fkiEmailID: kotlin.Int? = null,

    /* The name of the Branding  This value will only be set if you wish to overwrite the default name. If you want to keep the default name, leave this property empty */
    @Json(name = "sBrandingName")
    val sBrandingName: kotlin.String? = null,

    /* The email address. */
    @Json(name = "sEmailAddress")
    val sEmailAddress: kotlin.String? = null

)

