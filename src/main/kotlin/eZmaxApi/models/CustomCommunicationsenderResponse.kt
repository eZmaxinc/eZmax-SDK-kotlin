/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.CustomContactNameResponse

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Generic Communicationsender Response
 *
 * @param eCommunicationsenderObjecttype 
 * @param objContactName 
 * @param fkiAgentID The unique ID of the Agent.
 * @param fkiBrokerID The unique ID of the Broker.
 * @param fkiUserID The unique ID of the User
 * @param fkiMailboxsharedID The unique ID of the Mailboxshared
 * @param sEmailAddress The email address.
 * @param sPhoneE164 A phone number in E.164 Format
 */


data class CustomCommunicationsenderResponse (

    @Json(name = "eCommunicationsenderObjecttype")
    val eCommunicationsenderObjecttype: CustomCommunicationsenderResponse.ECommunicationsenderObjecttype,

    @Json(name = "objContactName")
    val objContactName: CustomContactNameResponse,

    /* The unique ID of the Agent. */
    @Json(name = "fkiAgentID")
    val fkiAgentID: kotlin.Int? = null,

    /* The unique ID of the Broker. */
    @Json(name = "fkiBrokerID")
    val fkiBrokerID: kotlin.Int? = null,

    /* The unique ID of the User */
    @Json(name = "fkiUserID")
    val fkiUserID: kotlin.Int? = null,

    /* The unique ID of the Mailboxshared */
    @Json(name = "fkiMailboxsharedID")
    val fkiMailboxsharedID: kotlin.Int? = null,

    /* The email address. */
    @Json(name = "sEmailAddress")
    val sEmailAddress: kotlin.String? = null,

    /* A phone number in E.164 Format */
    @Json(name = "sPhoneE164")
    val sPhoneE164: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: Agent,Broker,User,Mailboxshared
     */
    @JsonClass(generateAdapter = false)
    enum class ECommunicationsenderObjecttype(val value: kotlin.String) {
        @Json(name = "Agent") Agent("Agent"),
        @Json(name = "Broker") Broker("Broker"),
        @Json(name = "User") User("User"),
        @Json(name = "Mailboxshared") Mailboxshared("Mailboxshared");
    }
}

