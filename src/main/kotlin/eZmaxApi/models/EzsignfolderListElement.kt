/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.FieldEEzsignfolderStep
import eZmaxApi.models.FieldEEzsignfoldertypePrivacylevel

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * An Ezsignfolder List Element
 *
 * @param pkiEzsignfolderID The unique ID of the Ezsignfolder
 * @param fkiEzsignfoldertypeID The unique ID of the Ezsignfoldertype.
 * @param eEzsignfoldertypePrivacylevel 
 * @param sEzsignfoldertypeNameX The name of the Ezsignfoldertype in the language of the requester
 * @param sEzsignfolderDescription The description of the Ezsignfolder
 * @param eEzsignfolderStep 
 * @param dtCreatedDate The date and time at which the object was created
 * @param iEzsigndocument The total number of Ezsigndocument in the folder
 * @param iEzsigndocumentEdm The total number of Ezsigndocument in the folder that were saved in the edm system
 * @param iEzsignsignature The total number of signature blocks in all Ezsigndocuments in the folder
 * @param iEzsignsignatureSigned The total number of already signed signature blocks in all Ezsigndocuments in the folder
 * @param iEzsignformfieldgroup The total number of Ezsignformfieldgroup in all Ezsigndocuments in the folder
 * @param iEzsignformfieldgroupCompleted The total number of completed Ezsignformfieldgroup in all Ezsigndocuments in the folder
 * @param dEzsignfolderCompletedpercentage Percentage of Ezsignform/Ezsignsignatures has completed
 * @param dEzsignfolderFormcompletedpercentage Percentage of Ezsignform has completed
 * @param dEzsignfolderSignaturecompletedpercentage Percentage of Ezsignsignatures has signed
 * @param dtEzsignfolderDelayedsenddate The date and time at which the Ezsignfolder will be sent in the future.
 * @param dtEzsignfolderSentdate The date and time at which the Ezsignfolder was sent the last time.
 * @param dtEzsignfolderDuedate The maximum date and time at which the Ezsignfolder can be signed.
 * @param bEzsignformHasdependencies Whether the Ezsignform/Ezsignsignatures has dependencies or not
 * @param dtEzsignfolderClose The date and time at which the Ezsignfolder was closed. Either by applying the last signature or by completing it prematurely.
 * @param dtEzsignfolderArchive The date and time at which the Ezsignfolder was archived.
 * @param dtEzsignfolderDispose The date and time at which the Ezsignfolder was disposed.
 * @param bEzsignfolderSigner Whether the Ezsignfolder has an Ezsignsignatures that need to be signed or an Ezsignformfieldgroups that need to be filled by the current user
 */


data class EzsignfolderListElement (

    /* The unique ID of the Ezsignfolder */
    @Json(name = "pkiEzsignfolderID")
    val pkiEzsignfolderID: kotlin.Int,

    /* The unique ID of the Ezsignfoldertype. */
    @Json(name = "fkiEzsignfoldertypeID")
    val fkiEzsignfoldertypeID: kotlin.Int,

    @Json(name = "eEzsignfoldertypePrivacylevel")
    val eEzsignfoldertypePrivacylevel: FieldEEzsignfoldertypePrivacylevel,

    /* The name of the Ezsignfoldertype in the language of the requester */
    @Json(name = "sEzsignfoldertypeNameX")
    val sEzsignfoldertypeNameX: kotlin.String,

    /* The description of the Ezsignfolder */
    @Json(name = "sEzsignfolderDescription")
    val sEzsignfolderDescription: kotlin.String,

    @Json(name = "eEzsignfolderStep")
    val eEzsignfolderStep: FieldEEzsignfolderStep,

    /* The date and time at which the object was created */
    @Json(name = "dtCreatedDate")
    val dtCreatedDate: kotlin.String,

    /* The total number of Ezsigndocument in the folder */
    @Json(name = "iEzsigndocument")
    val iEzsigndocument: kotlin.Int,

    /* The total number of Ezsigndocument in the folder that were saved in the edm system */
    @Json(name = "iEzsigndocumentEdm")
    val iEzsigndocumentEdm: kotlin.Int,

    /* The total number of signature blocks in all Ezsigndocuments in the folder */
    @Json(name = "iEzsignsignature")
    val iEzsignsignature: kotlin.Int,

    /* The total number of already signed signature blocks in all Ezsigndocuments in the folder */
    @Json(name = "iEzsignsignatureSigned")
    val iEzsignsignatureSigned: kotlin.Int,

    /* The total number of Ezsignformfieldgroup in all Ezsigndocuments in the folder */
    @Json(name = "iEzsignformfieldgroup")
    val iEzsignformfieldgroup: kotlin.Int,

    /* The total number of completed Ezsignformfieldgroup in all Ezsigndocuments in the folder */
    @Json(name = "iEzsignformfieldgroupCompleted")
    val iEzsignformfieldgroupCompleted: kotlin.Int,

    /* Percentage of Ezsignform/Ezsignsignatures has completed */
    @Json(name = "dEzsignfolderCompletedpercentage")
    val dEzsignfolderCompletedpercentage: kotlin.String,

    /* Percentage of Ezsignform has completed */
    @Json(name = "dEzsignfolderFormcompletedpercentage")
    val dEzsignfolderFormcompletedpercentage: kotlin.String,

    /* Percentage of Ezsignsignatures has signed */
    @Json(name = "dEzsignfolderSignaturecompletedpercentage")
    val dEzsignfolderSignaturecompletedpercentage: kotlin.String,

    /* The date and time at which the Ezsignfolder will be sent in the future. */
    @Json(name = "dtEzsignfolderDelayedsenddate")
    val dtEzsignfolderDelayedsenddate: kotlin.String? = null,

    /* The date and time at which the Ezsignfolder was sent the last time. */
    @Json(name = "dtEzsignfolderSentdate")
    val dtEzsignfolderSentdate: kotlin.String? = null,

    /* The maximum date and time at which the Ezsignfolder can be signed. */
    @Json(name = "dtEzsignfolderDuedate")
    val dtEzsignfolderDuedate: kotlin.String? = null,

    /* Whether the Ezsignform/Ezsignsignatures has dependencies or not */
    @Json(name = "bEzsignformHasdependencies")
    val bEzsignformHasdependencies: kotlin.Boolean? = null,

    /* The date and time at which the Ezsignfolder was closed. Either by applying the last signature or by completing it prematurely. */
    @Json(name = "dtEzsignfolderClose")
    val dtEzsignfolderClose: kotlin.String? = null,

    /* The date and time at which the Ezsignfolder was archived. */
    @Json(name = "dtEzsignfolderArchive")
    val dtEzsignfolderArchive: kotlin.String? = null,

    /* The date and time at which the Ezsignfolder was disposed. */
    @Json(name = "dtEzsignfolderDispose")
    val dtEzsignfolderDispose: kotlin.String? = null,

    /* Whether the Ezsignfolder has an Ezsignsignatures that need to be signed or an Ezsignformfieldgroups that need to be filled by the current user */
    @Json(name = "bEzsignfolderSigner")
    val bEzsignfolderSigner: kotlin.Boolean? = null

) {


}

