/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.EzsigntemplatesignerResponse
import eZmaxApi.models.FieldEEzsigntemplatesignerMapping

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A Ezsigntemplatesigner Object
 *
 * @param pkiEzsigntemplatesignerID The unique ID of the Ezsigntemplatesigner
 * @param fkiEzsigntemplateID The unique ID of the Ezsigntemplate
 * @param sEzsigntemplatesignerDescription The description of the Ezsigntemplatesigner
 * @param fkiUserID The unique ID of the User
 * @param fkiUsergroupID The unique ID of the Usergroup
 * @param fkiEzdoctemplatedocumentID The unique ID of the Ezdoctemplatedocument
 * @param bEzsigntemplatesignerReceivecopy If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain't required to sign the document.
 * @param eEzsigntemplatesignerMapping 
 * @param sUserName The description of the User in the language of the requester
 * @param sUsergroupNameX The Name of the Usergroup in the language of the requester
 */


class EzsigntemplatesignerResponseCompound (

    /* The unique ID of the Ezsigntemplatesigner */
    @Json(name = "pkiEzsigntemplatesignerID")
    override val pkiEzsigntemplatesignerID: kotlin.Int,

    /* The unique ID of the Ezsigntemplate */
    @Json(name = "fkiEzsigntemplateID")
    override val fkiEzsigntemplateID: kotlin.Int,

    /* The description of the Ezsigntemplatesigner */
    @Json(name = "sEzsigntemplatesignerDescription")
    override val sEzsigntemplatesignerDescription: kotlin.String,

    /* The unique ID of the User */
    @Json(name = "fkiUserID")
    override val fkiUserID: kotlin.Int? = null,

    /* The unique ID of the Usergroup */
    @Json(name = "fkiUsergroupID")
    override val fkiUsergroupID: kotlin.Int? = null,

    /* The unique ID of the Ezdoctemplatedocument */
    @Json(name = "fkiEzdoctemplatedocumentID")
    override val fkiEzdoctemplatedocumentID: kotlin.Int? = null,

    /* If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain't required to sign the document. */
    @Json(name = "bEzsigntemplatesignerReceivecopy")
    override val bEzsigntemplatesignerReceivecopy: kotlin.Boolean? = null,

    @Json(name = "eEzsigntemplatesignerMapping")
    override val eEzsigntemplatesignerMapping: FieldEEzsigntemplatesignerMapping? = null,

    /* The description of the User in the language of the requester */
    @Json(name = "sUserName")
    override val sUserName: kotlin.String? = null,

    /* The Name of the Usergroup in the language of the requester */
    @Json(name = "sUsergroupNameX")
    override val sUsergroupNameX: kotlin.String? = null

) : EzsigntemplatesignerResponse {


}

