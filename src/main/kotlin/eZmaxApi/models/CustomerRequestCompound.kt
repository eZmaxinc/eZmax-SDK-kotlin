/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.models

import eZmaxApi.models.CustomerRequest
import eZmaxApi.models.FieldECustomerMarketingcorrespondence
import eZmaxApi.models.FieldECustomerType

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A Customer Object and children
 *
 * @param fkiCompanyID The unique ID of the Company
 * @param fkiCustomergroupID The unique ID of the Customergroup
 * @param sCustomerName The name of the Customer
 * @param fkiContactinformationsID The unique ID of the Contactinformations
 * @param fkiContactcontainerID The unique ID of the Contactcontainer
 * @param fkiImageID The unique ID of the Image
 * @param fkiGlaccountcontainerID The unique ID of the Glaccountcontainer
 * @param fkiLanguageID The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
 * @param fkiDepartmentID The unique ID of the Department
 * @param fkiPaymentmethodID The unique ID of the Paymentmethod
 * @param fkiElectronicfundstransferbankaccountID The unique ID of the Electronicfundstransferbankaccount
 * @param fkiElectronicfundstransferbankaccountIDDirectdebit The unique ID of the Electronicfundstransferbankaccount
 * @param fkiSendingmethodID The unique ID of the Sendingmethod
 * @param fkiTaxassignmentID The unique ID of the Taxassignment.  Valid values:  |Value|Description| |-|-| |1|No tax| |2|GST| |3|HST (ON)| |4|HST (NB)| |5|HST (NS)| |6|HST (NL)| |7|HST (PE)| |8|GST + QST (QC)| |9|GST + QST (QC) Non-Recoverable| |10|GST + PST (BC)| |11|GST + PST (SK)| |12|GST + RST (MB)| |13|GST + PST (BC) Non-Recoverable| |14|GST + PST (SK) Non-Recoverable| |15|GST + RST (MB) Non-Recoverable|
 * @param fkiAttendancestatusID The unique ID of the Attendancestatus
 * @param fkiAgentIDVariableexpensechargeto The unique ID of the Agent.
 * @param fkiBrokerIDVariableexpensechargeto The unique ID of the Broker.
 * @param fkiCustomerIDVariableexpensechargeto The unique ID of the Customer.
 * @param fkiGlaccountcontainerIDVariableexpensechargeto The unique ID of the Glaccountcontainer
 * @param fkiAgentIDSupplychargechargeto The unique ID of the Agent.
 * @param fkiBrokerIDSupplychargechargeto The unique ID of the Broker.
 * @param fkiCustomerIDSupplychargechargeto The unique ID of the Customer.
 * @param fkiGlaccountcontainerIDSupplychargechargeto The unique ID of the Glaccountcontainer
 * @param fkiInvoicealternatelogoID The unique ID of the Invoicealternatelogo
 * @param fkiSynchronizationlinkserverID The unique ID of the Synchronizationlinkserver
 * @param sCustomerCode The code of the Customer
 * @param dCustomerFulltimeequivalent The fulltimeequivalent of the Customer
 * @param iCustomerPhotocopiercode The photocopiercode of the Customer
 * @param iCustomerLongdistancecode The longdistancecode of the Customer
 * @param iCustomerTimewindowstart The timewindowstart of the Customer
 * @param iCustomerTimewindowend The timewindowend of the Customer
 * @param dCustomerMinimumchargeableinterests The minimumchargeableinterests of the Customer
 * @param dtCustomerBirthdate The birthdate of the Customer
 * @param dtCustomerTransfer The transfer of the Customer
 * @param dtCustomerTransferappointment The transferappointment of the Customer
 * @param dtCustomerTransfersurvey The transfersurvey of the Customer
 * @param bCustomerIsactive Whether the customer is active or not
 * @param bCustomerVariableexpensefinanced Whether if it's an variableexpensefinanced
 * @param bCustomerVariableexpensefinancedtaxes Whether if it's an variableexpensefinancedtaxes
 * @param bCustomerSupplychargefinanced Whether if it's an supplychargefinanced
 * @param bCustomerSupplychargefinancedtaxes Whether if it's an supplychargefinancedtaxes
 * @param bCustomerAttendance Whether if it's an attendance
 * @param eCustomerType 
 * @param eCustomerMarketingcorrespondence 
 * @param bCustomerBlackcopycarbon Whether if it's an blackcopycarbon
 * @param bCustomerUnsubscribeinfo Whether if it's an unsubscribeinfo
 * @param tCustomerComment The comment of the Customer
 * @param pkiCustomerID The unique ID of the Customer.
 * @param efkiUserID The unique ID of the User
 * @param efksCustomerCode The code of the Customer
 * @param IMPORTID 
 */


class CustomerRequestCompound (

    /* The unique ID of the Company */
    @Json(name = "fkiCompanyID")
    override val fkiCompanyID: kotlin.Int,

    /* The unique ID of the Customergroup */
    @Json(name = "fkiCustomergroupID")
    override val fkiCustomergroupID: kotlin.Int,

    /* The name of the Customer */
    @Json(name = "sCustomerName")
    override val sCustomerName: kotlin.String,

    /* The unique ID of the Contactinformations */
    @Json(name = "fkiContactinformationsID")
    override val fkiContactinformationsID: kotlin.Int,

    /* The unique ID of the Contactcontainer */
    @Json(name = "fkiContactcontainerID")
    override val fkiContactcontainerID: kotlin.Int,

    /* The unique ID of the Image */
    @Json(name = "fkiImageID")
    override val fkiImageID: kotlin.Int,

    /* The unique ID of the Glaccountcontainer */
    @Json(name = "fkiGlaccountcontainerID")
    override val fkiGlaccountcontainerID: kotlin.Int,

    /* The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English| */
    @Json(name = "fkiLanguageID")
    override val fkiLanguageID: kotlin.Int,

    /* The unique ID of the Department */
    @Json(name = "fkiDepartmentID")
    override val fkiDepartmentID: kotlin.Int,

    /* The unique ID of the Paymentmethod */
    @Json(name = "fkiPaymentmethodID")
    override val fkiPaymentmethodID: kotlin.Int,

    /* The unique ID of the Electronicfundstransferbankaccount */
    @Json(name = "fkiElectronicfundstransferbankaccountID")
    override val fkiElectronicfundstransferbankaccountID: kotlin.Int,

    /* The unique ID of the Electronicfundstransferbankaccount */
    @Json(name = "fkiElectronicfundstransferbankaccountIDDirectdebit")
    override val fkiElectronicfundstransferbankaccountIDDirectdebit: kotlin.Int,

    /* The unique ID of the Sendingmethod */
    @Json(name = "fkiSendingmethodID")
    override val fkiSendingmethodID: kotlin.Int,

    /* The unique ID of the Taxassignment.  Valid values:  |Value|Description| |-|-| |1|No tax| |2|GST| |3|HST (ON)| |4|HST (NB)| |5|HST (NS)| |6|HST (NL)| |7|HST (PE)| |8|GST + QST (QC)| |9|GST + QST (QC) Non-Recoverable| |10|GST + PST (BC)| |11|GST + PST (SK)| |12|GST + RST (MB)| |13|GST + PST (BC) Non-Recoverable| |14|GST + PST (SK) Non-Recoverable| |15|GST + RST (MB) Non-Recoverable| */
    @Json(name = "fkiTaxassignmentID")
    override val fkiTaxassignmentID: kotlin.Int,

    /* The unique ID of the Attendancestatus */
    @Json(name = "fkiAttendancestatusID")
    override val fkiAttendancestatusID: kotlin.Int,

    /* The unique ID of the Agent. */
    @Json(name = "fkiAgentIDVariableexpensechargeto")
    override val fkiAgentIDVariableexpensechargeto: kotlin.Int,

    /* The unique ID of the Broker. */
    @Json(name = "fkiBrokerIDVariableexpensechargeto")
    override val fkiBrokerIDVariableexpensechargeto: kotlin.Int,

    /* The unique ID of the Customer. */
    @Json(name = "fkiCustomerIDVariableexpensechargeto")
    override val fkiCustomerIDVariableexpensechargeto: kotlin.Int,

    /* The unique ID of the Glaccountcontainer */
    @Json(name = "fkiGlaccountcontainerIDVariableexpensechargeto")
    override val fkiGlaccountcontainerIDVariableexpensechargeto: kotlin.Int,

    /* The unique ID of the Agent. */
    @Json(name = "fkiAgentIDSupplychargechargeto")
    override val fkiAgentIDSupplychargechargeto: kotlin.Int,

    /* The unique ID of the Broker. */
    @Json(name = "fkiBrokerIDSupplychargechargeto")
    override val fkiBrokerIDSupplychargechargeto: kotlin.Int,

    /* The unique ID of the Customer. */
    @Json(name = "fkiCustomerIDSupplychargechargeto")
    override val fkiCustomerIDSupplychargechargeto: kotlin.Int,

    /* The unique ID of the Glaccountcontainer */
    @Json(name = "fkiGlaccountcontainerIDSupplychargechargeto")
    override val fkiGlaccountcontainerIDSupplychargechargeto: kotlin.Int,

    /* The unique ID of the Invoicealternatelogo */
    @Json(name = "fkiInvoicealternatelogoID")
    override val fkiInvoicealternatelogoID: kotlin.Int,

    /* The unique ID of the Synchronizationlinkserver */
    @Json(name = "fkiSynchronizationlinkserverID")
    override val fkiSynchronizationlinkserverID: kotlin.Int,

    /* The code of the Customer */
    @Json(name = "sCustomerCode")
    override val sCustomerCode: kotlin.String,

    /* The fulltimeequivalent of the Customer */
    @Json(name = "dCustomerFulltimeequivalent")
    override val dCustomerFulltimeequivalent: kotlin.String,

    /* The photocopiercode of the Customer */
    @Json(name = "iCustomerPhotocopiercode")
    override val iCustomerPhotocopiercode: kotlin.Int,

    /* The longdistancecode of the Customer */
    @Json(name = "iCustomerLongdistancecode")
    override val iCustomerLongdistancecode: kotlin.Int,

    /* The timewindowstart of the Customer */
    @Json(name = "iCustomerTimewindowstart")
    override val iCustomerTimewindowstart: kotlin.Int,

    /* The timewindowend of the Customer */
    @Json(name = "iCustomerTimewindowend")
    override val iCustomerTimewindowend: kotlin.Int,

    /* The minimumchargeableinterests of the Customer */
    @Json(name = "dCustomerMinimumchargeableinterests")
    override val dCustomerMinimumchargeableinterests: kotlin.String,

    /* The birthdate of the Customer */
    @Json(name = "dtCustomerBirthdate")
    override val dtCustomerBirthdate: kotlin.String,

    /* The transfer of the Customer */
    @Json(name = "dtCustomerTransfer")
    override val dtCustomerTransfer: kotlin.String,

    /* The transferappointment of the Customer */
    @Json(name = "dtCustomerTransferappointment")
    override val dtCustomerTransferappointment: kotlin.String,

    /* The transfersurvey of the Customer */
    @Json(name = "dtCustomerTransfersurvey")
    override val dtCustomerTransfersurvey: kotlin.String,

    /* Whether the customer is active or not */
    @Json(name = "bCustomerIsactive")
    override val bCustomerIsactive: kotlin.Boolean,

    /* Whether if it's an variableexpensefinanced */
    @Json(name = "bCustomerVariableexpensefinanced")
    override val bCustomerVariableexpensefinanced: kotlin.Boolean,

    /* Whether if it's an variableexpensefinancedtaxes */
    @Json(name = "bCustomerVariableexpensefinancedtaxes")
    override val bCustomerVariableexpensefinancedtaxes: kotlin.Boolean,

    /* Whether if it's an supplychargefinanced */
    @Json(name = "bCustomerSupplychargefinanced")
    override val bCustomerSupplychargefinanced: kotlin.Boolean,

    /* Whether if it's an supplychargefinancedtaxes */
    @Json(name = "bCustomerSupplychargefinancedtaxes")
    override val bCustomerSupplychargefinancedtaxes: kotlin.Boolean,

    /* Whether if it's an attendance */
    @Json(name = "bCustomerAttendance")
    override val bCustomerAttendance: kotlin.Boolean,

    @Json(name = "eCustomerType")
    override val eCustomerType: FieldECustomerType,

    @Json(name = "eCustomerMarketingcorrespondence")
    override val eCustomerMarketingcorrespondence: FieldECustomerMarketingcorrespondence,

    /* Whether if it's an blackcopycarbon */
    @Json(name = "bCustomerBlackcopycarbon")
    override val bCustomerBlackcopycarbon: kotlin.Boolean,

    /* Whether if it's an unsubscribeinfo */
    @Json(name = "bCustomerUnsubscribeinfo")
    override val bCustomerUnsubscribeinfo: kotlin.Boolean,

    /* The comment of the Customer */
    @Json(name = "tCustomerComment")
    override val tCustomerComment: kotlin.String,

    /* The unique ID of the Customer. */
    @Json(name = "pkiCustomerID")
    override val pkiCustomerID: kotlin.Int? = null,

    /* The unique ID of the User */
    @Json(name = "efkiUserID")
    override val efkiUserID: kotlin.Int? = null,

    /* The code of the Customer */
    @Json(name = "efksCustomerCode")
    override val efksCustomerCode: kotlin.String? = null,

    @Json(name = "IMPORTID")
    override val IMPORTID: kotlin.String? = null

) : CustomerRequest {


}

