/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package eZmaxApi.apis

import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.HttpUrl

import eZmaxApi.models.CommonMinusResponseMinusError
import eZmaxApi.models.FieldMinusPksEzmaxclientOs
import eZmaxApi.models.GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse

import com.squareup.moshi.Json

import eZmaxApi.infrastructure.ApiClient
import eZmaxApi.infrastructure.ApiResponse
import eZmaxApi.infrastructure.ClientException
import eZmaxApi.infrastructure.ClientError
import eZmaxApi.infrastructure.ServerException
import eZmaxApi.infrastructure.ServerError
import eZmaxApi.infrastructure.MultiValueMap
import eZmaxApi.infrastructure.PartConfig
import eZmaxApi.infrastructure.RequestConfig
import eZmaxApi.infrastructure.RequestMethod
import eZmaxApi.infrastructure.ResponseType
import eZmaxApi.infrastructure.Success
import eZmaxApi.infrastructure.toMultiValue

class GlobalEzmaxclientApi(basePath: kotlin.String = defaultBasePath, client: OkHttpClient = ApiClient.defaultClient) : ApiClient(basePath, client) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "https://prod.api.appcluster01.ca-central-1.ezmax.com/rest")
        }
    }

    /**
     * Retrieve the latest version of the Ezmaxclient
     * Retrieve the latest version of the Ezmaxclient that is available on the store.
     * @param pksEzmaxclientOs 
     * @return GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun globalEzmaxclientVersionV1(pksEzmaxclientOs: FieldMinusPksEzmaxclientOs) : GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse {
        val localVarResponse = globalEzmaxclientVersionV1WithHttpInfo(pksEzmaxclientOs = pksEzmaxclientOs)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Retrieve the latest version of the Ezmaxclient
     * Retrieve the latest version of the Ezmaxclient that is available on the store.
     * @param pksEzmaxclientOs 
     * @return ApiResponse<GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun globalEzmaxclientVersionV1WithHttpInfo(pksEzmaxclientOs: FieldMinusPksEzmaxclientOs) : ApiResponse<GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse?> {
        val localVariableConfig = globalEzmaxclientVersionV1RequestConfig(pksEzmaxclientOs = pksEzmaxclientOs)

        return request<Unit, GlobalMinusEzmaxclientMinusVersionMinusV1MinusResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation globalEzmaxclientVersionV1
     *
     * @param pksEzmaxclientOs 
     * @return RequestConfig
     */
    fun globalEzmaxclientVersionV1RequestConfig(pksEzmaxclientOs: FieldMinusPksEzmaxclientOs) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/1/ezmaxclient/{pksEzmaxclientOs}/version".replace("{"+"pksEzmaxclientOs"+"}", encodeURIComponent(pksEzmaxclientOs.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }


    private fun encodeURIComponent(uriComponent: kotlin.String): kotlin.String =
        HttpUrl.Builder().scheme("http").host("localhost").addPathSegment(uriComponent).build().encodedPathSegments[0]
}
